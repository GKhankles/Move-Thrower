{"version":3,"sources":["Dropdown.jsx","Pokemon.jsx","HomePage.jsx","SignIn.jsx","firebase.js","StatCalculator.js","pokedex_gen_1.txt","pokedex_gen_2.txt","pokedex_gen_3.txt","pokedex_gen_4.txt","pokedex_gen_5.txt","pokedex_gen_6.txt","pokedex_gen_7.txt","pokedex_gen_8.txt","pokemoves_gen_1.txt","pokemoves_gen_2.txt","pokemoves_gen_3.txt","pokemoves_gen_4.txt","pokemoves_gen_5.txt","pokemoves_gen_6.txt","pokemoves_gen_7.txt","pokemoves_gen_8.txt","moveCalculator.js","App.js","reportWebVitals.js","index.js"],"names":["Dropdown","props","onOptionChange","bind","getOptionList","state","uid","option","initial","event","this","setState","target","value","getOption","names","optionsList","forEach","element","push","name","onChange","React","Component","Pokemon","retrievePkmnFromList","updatePkmnInfo","retrievePkmnInfo","updatePkmnEV","updatePkmnIV","updatePkmnLevel","retrieveNatureFromList","retrieveStatusFromList","getTypeColor","savePokemon","loadPokemon","setSavedPokemon","getSavedPokemon","natureList","statusList","statCalculator","StatCalculator","curPkmn","baseStats","HP","Atk","SpAtk","Def","SpDef","Spd","ivInfo","evInfo","totalStats","level","nature","status","moves","types","pkmnImg","pokemonList","isAdvanced","readySwap","savedName","display","nameList","pkmnList","firebase","database","ref","console","log","nmList","prefList","on","snapshot","val","data","Object","keys","map","key","selectedPokemon","pkm","loc","global","pkmn1","pkmn2","type","readPokemonFromFile","selectedNature","updateTotalStats","getStatTotals","selectedStatus","selectedPkmn","pkmn","pokemonName","toLowerCase","fetch","then","response","json","pokemonInfo","newTotalStats","getPkmnInfo","pkmnInfo","stats","newBaseStats","base_stat","newMoves","newImg","sprites","front_default","newTypes","genNumber","curGeneration","past_types","length","i","generation","charAt","toUpperCase","slice","tempLevel","parseInt","statType","tempEvInfo","newStat","tempIvInfo","pokedexGen1","text","getPokemonHelper","pokedexGen2","pokedexGen3","pokedexGen4","pokedexGen5","pokedexGen6","pokedexGen7","pokedexGen8","tempPkmnList","displayList","undefined","className","pokemonNames","split","newPokemonList","tempID","tempList","IVEV","src","alt","hpAdvanced","e","onBlur","atkAdvanced","defAdvanced","SpAtkAdvanced","SpDefAdvanced","SpdAdvanced","advancedToggle","pkmnDropDown","generatePkmnList","advancedStats","styleWidth","styleTypeWidth","capFirst","capSecond","type2","style","backgroundColor","typeDisplay","gridTemplateColumns","disCont","serverPokemon","classname","onClick","width","height","HomePage","retrieveAtkPokemonInfo","retrieveDefPokemonInfo","calculateMoves","switchPokemon","advancedOptions","changeGeneration","getAtkPokemon","retrieveWeatherFromList","retrieveTerrainFromList","resetSettings","createMoveList","moveCalculator","weather_types","terrain_types","weatherList1","weatherList2","weatherList3","weatherList45","weatherList678","weatherList","terrainList","atkPkmnInfo","defPkmnInfo","calculatedMoves","calculating","weather","base1","nature1","base2","nature2","clr1","clr2","clr3","clr4","selectedWeather","selectedTerrain","terrain","tempState","a","calcMoves","forceUpdate","calcMoveList","color","move_type","finalColor","backgroundImage","move","min_dmg","max_dmg","moveList","calculateButton","isDisabled","generationSelection","defaultChecked","weatherSelection1","changeWeather","weatherSelection2","weatherSelection3","weatherSelection45","weatherSelection678","terrainSelection","changeTerrain","wholeList","fontSize","preference","minWidth","textDecoration","SignIn","sendLogIn","sendSignUp","sendSignOut","signInDisplay","loggedInDisplay","updateEmail","updatePassword","resetErrors","updateUserInfo","fbInitialized","signedIn","username","password","logInError","signUpError","current","fireBaseInitialized","isButtonDisabled","auth","signInWithEmailAndPassword","userCredential","userInfo","user","once","snap","catch","error","errorMessage","message","createUserWithEmailAndPassword","set","signOut","update","createFirebase","signUpErrorMessage","logInErrorMessage","signInRedirect","to","pathname","disabled","displayUsername","accountDisplay","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","databaseURL","analytics","EVs","IVs","tempNature","setHealth","setAttack","setDefense","setSpAttack","setSpDefense","setSpeed","baseHealth","EVHealth","IVHealth","Math","floor","baseAttack","EVAttack","IVAttack","Attack","multiplier","baseDefense","EVDefense","IVDefense","Defense","baseSpAttack","EVSpAttack","IVSpAttack","SpAttack","baseSpDefense","EVSpDefense","IVSpDefense","SpDefense","baseSpeed","EVSpeed","IVSpeed","Speed","gen1matchups","gen2to5matchups","gen6to8matchups","elemental_types","physical_types","Normal","Fighting","Flying","Poison","Ground","Rock","Bug","Ghost","Steel","special_types","Fire","Water","Grass","Electric","Psychic","Ice","Dragon","Dark","Fairy","move_category","Physical","Special","fileName","Gen1Moves","Gen2Moves","Gen3Moves","Gen4Moves","Gen5Moves","Gen6Moves","Gen7Moves","Gen8Moves","moveParserHelper","movesList","line","index","tempLine","replace","AtkPokemon","DefPokemon","stage_cond","move_Damage","readMovesFromFile","allMoves","Name","damage","calculateDamage","min_damage","max_damage","optimalMoveList","sort","b","ceil","Weather_mod","Stab_mod","Type_mod","Burn_mod","category","isPhysical","power","d","indexOf","baseDamage","Mod1","pokeRound","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qLAEaA,EAAb,kDACI,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACPC,eAAiB,EAAKA,eAAeC,KAApB,gBACtB,EAAKC,cAAgB,EAAKA,cAAcD,KAAnB,gBAEf,EAAKE,MAAQ,CACTC,IAAK,GACLC,OAASN,EAAMO,SAAW,IAPf,EADvB,kDAYI,SAAeC,GACXC,KAAKC,SAAS,CACVJ,OAAQE,EAAMG,OAAOC,QAEzBH,KAAKT,MAAMa,UAAUL,EAAMG,OAAOC,SAhB1C,2BAmBI,SAAcE,GACV,IAAIC,EAAc,GAMlB,OALAD,EAAME,SAAQ,SAAAC,GAAO,OACjBF,EAAYG,KACR,wBAAQC,KAAMF,EAAd,SAAsCA,GAAVA,OAG7BF,IA1Bf,+BAiCI,WACIN,KAAKC,SAAS,CACVK,YAAaN,KAAKN,cAAcM,KAAKT,MAAMc,WAnCvD,oBAuCI,WACI,IAAIC,EAAcN,KAAKL,MAAMW,YAE7B,OACI,wBAAQH,MAAOH,KAAKL,MAAME,OAAQc,SAAUX,KAAKR,eAAjD,SACKc,QA5CjB,GAA8BM,IAAMC,WAkDrBvB,O,+PCrCFwB,EAAb,kDACI,WAAYvB,GAAQ,IAAD,8BACf,cAAMA,IACPwB,qBAAuB,EAAKA,qBAAqBtB,KAA1B,gBAC5B,EAAKuB,eAAiB,EAAKA,eAAevB,KAApB,gBACtB,EAAKwB,iBAAmB,EAAKA,iBAAiBxB,KAAtB,gBACxB,EAAKyB,aAAe,EAAKA,aAAazB,KAAlB,gBACpB,EAAK0B,aAAe,EAAKA,aAAa1B,KAAlB,gBACpB,EAAK2B,gBAAkB,EAAKA,gBAAgB3B,KAArB,gBACvB,EAAK4B,uBAAyB,EAAKA,uBAAuB5B,KAA5B,gBAC9B,EAAK6B,uBAAyB,EAAKA,uBAAuB7B,KAA5B,gBAC9B,EAAK8B,aAAe,EAAKA,aAAa9B,KAAlB,gBACpB,EAAK+B,YAAc,EAAKA,YAAY/B,KAAjB,gBACnB,EAAKgC,YAAc,EAAKA,YAAYhC,KAAjB,gBACnB,EAAKiC,gBAAkB,EAAKA,gBAAgBjC,KAArB,gBACvB,EAAKkC,gBAAkB,EAAKA,gBAAgBlC,KAArB,gBAEvB,EAAKmC,WAAa,CAAC,QAAS,SAAU,QAAS,UAAW,UAAW,OAAQ,SAC5E,UAAW,SAAU,MAAO,QAAS,QAAS,UAAW,QAAS,QAAS,SAC3E,OAAQ,QAAS,UAAW,OAAQ,OAAQ,SAAU,QAAS,UAAW,UAE3E,EAAKC,WAAa,CAAC,UAAU,iBAAiB,OAAO,SAAS,YAAY,WAAW,SAErF,EAAKC,eAAiB,IAAIC,IAEpB,EAAKpC,MAAQ,CACTC,IAAK,GACdoC,QAAS,YACTC,UAAW,CACVC,GAAI,EACJC,IAAK,EACLC,MAAO,EACPC,IAAK,EACLC,MAAO,EACPC,IAAK,GAENC,OAAQ,CACPN,GAAI,EACJC,IAAK,EACLC,MAAO,EACPC,IAAK,EACLC,MAAO,EACPC,IAAK,GAENE,OAAQ,CACPP,GAAI,EACJC,IAAK,EACLC,MAAO,EACPC,IAAK,EACLC,MAAO,EACPC,IAAK,GAENG,WAAY,CACXR,GAAI,EACJC,IAAK,EACLC,MAAO,EACPC,IAAK,EACLC,MAAO,EACPC,IAAK,GAENI,MAAO,EACPC,OAAQ,QACRC,OAAQ,UACRC,MAAO,GACPC,MAAO,GACPC,QAAS,GACTC,YAAa,GACbC,YAAY,EACZC,WAAW,EACXC,UAAW,cACXC,SAAU,EACVC,SAAU,GACVC,SAAU,IAvEU,EADvB,+CA4EC,WACC,MAAuB,KAAnBvD,KAAKL,MAAMC,MACd4D,IAASC,WAAWC,IAAI,SAAW1D,KAAKL,MAAMC,IAAM,eAAea,KAAKT,KAAKL,QACtE,KA/EV,6BAqFC,WACCgE,QAAQC,IAAI,aACZD,QAAQC,IAAI5D,KAAKL,MAAMC,KACvB,IAAIiE,EAAS,GACTC,EAAW,GACf,MAAuB,KAAnB9D,KAAKL,MAAMC,KACd4D,IAASC,WAAWC,IAAI,SAAW1D,KAAKL,MAAMC,IAAM,eAAemE,GAAG,SAAS,SAAAC,GAC9EF,EAAW,GACXH,QAAQC,IAAII,EAASC,OACrB,IAAIC,EAAOF,EAASC,MAAQD,EAASC,MAAQ,GAC7CH,EAAQ,eAAQI,GACDC,OAAOC,KAAKN,GAClBO,KAAI,SAACC,GACbT,EAAOpD,KAAMqD,EAASQ,GAAKtC,YAE5B2B,QAAQC,IAAIC,MAEb7D,KAAKC,SAAS,CACbqD,SAAUO,EACVN,SAAUO,IAEXH,QAAQC,IAAI,OACZD,QAAQC,IAAI5D,KAAKL,MAAM2D,UACvBK,QAAQC,IAAI5D,KAAKL,MAAM4D,UAChBM,GAED,CAAC,UA/GV,yBAmHC,WACC7D,KAAK2B,kBACL3B,KAAKC,SAAS,CACboD,SAAS,EACTC,SAAUtD,KAAK2B,sBAvHlB,6BA2HC,SAAgB4C,GAAkB,IAAD,OAC5BC,EAAM,KACKL,OAAOC,KAAKpE,KAAKL,MAAM4D,UAC7Bc,KAAI,SAACC,GAEV,EAAK3E,MAAM4D,SAASe,GAAKtC,UAAYuC,IACvCC,EAAM,EAAK7E,MAAM4D,SAASe,OAIN,IAAnBtE,KAAKT,MAAMkF,IACbC,EAAOC,MAAM1E,SAAS,CACrBL,IAAK4E,EAAI5E,IACToC,QAASwC,EAAIxC,QACbC,UAAWuC,EAAIvC,UACfO,OAAQgC,EAAIhC,OACZC,OAAQ+B,EAAI/B,OACZC,WAAY8B,EAAI9B,WAChBC,MAAO6B,EAAI7B,MACXC,OAAQ4B,EAAI5B,OACZC,OAAQ2B,EAAI3B,OACZC,MAAO0B,EAAI1B,MACXC,MAAOyB,EAAIzB,MACXC,QAASwB,EAAIxB,QACbE,WAAYsB,EAAItB,WAChBC,UAAWqB,EAAIrB,YAGhBuB,EAAOE,MAAM3E,SAAS,CACrBL,IAAK4E,EAAI5E,IACToC,QAASwC,EAAIxC,QACbC,UAAWuC,EAAIvC,UACfO,OAAQgC,EAAIhC,OACZC,OAAQ+B,EAAI/B,OACZC,WAAY8B,EAAI9B,WAChBC,MAAO6B,EAAI7B,MACXC,OAAQ4B,EAAI5B,OACZC,OAAQ2B,EAAI3B,OACZC,MAAO0B,EAAI1B,MACXC,MAAOyB,EAAIzB,MACXC,QAASwB,EAAIxB,QACbE,WAAYsB,EAAItB,WAChBC,UAAWqB,EAAIrB,cArKnB,0BA0KC,SAAa0B,GACZ,OAAQA,GACP,IAAK,OACJ,MAAO,UACR,IAAK,QACJ,MAAO,UACR,IAAK,WACJ,MAAO,UACR,IAAK,QACJ,MAAO,UACR,IAAK,MACJ,MAAO,UACR,IAAK,WACJ,MAAO,UACR,IAAK,SACJ,MAAO,UACR,IAAK,SACJ,MAAO,UACR,IAAK,SACJ,MAAO,UACR,IAAK,UACJ,MAAO,UACR,IAAK,MACJ,MAAO,UACR,IAAK,OACJ,MAAO,UACR,IAAK,QACJ,MAAO,UACR,IAAK,SACJ,MAAO,UACR,IAAK,OACJ,MAAO,UACR,IAAK,QACJ,MAAO,UACR,IAAK,QACJ,MAAO,UACR,QACC,MAAO,aA/MX,+BAmNC,WACC7E,KAAK8E,sBACL9E,KAAKiB,iBAAiB,aACO,qBAAlByD,EAAOC,MACjBD,EAAOC,MAAQ3E,KAEf0E,EAAOE,MAAQ5E,OAzNlB,oCA+NC,SAAuB+E,GACtB/E,KAAKC,SAAS,CACb2C,OAAQmC,IAET/E,KAAKgF,iBAAiBhF,KAAK8B,eAAemD,cAAcjF,KAAKL,MAAMsC,UAAWjC,KAAKL,MAAM8C,OAAQzC,KAAKL,MAAM6C,OAAQxC,KAAKL,MAAMgD,MAAOoC,MAnOxI,oCAuOC,SAAuBG,GACtBlF,KAAKC,SAAS,CACb4C,OAAQqC,MAzOX,kCA8OC,SAAqBC,GACpBnF,KAAKC,SAAS,CACb+B,QAASmD,IAEVnF,KAAKiB,iBAAiBkE,KAlPxB,8BAsPC,SAAiBC,GAAO,IAAD,OAElBC,EAAcD,EAAKE,cAEjBC,MADU,qCAAuCF,GAEhDG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAW,OAAkB,EAAK3E,eAAe2E,QA5P/D,8BA+PC,SAAiBC,GAChB5F,KAAKC,SAAS,CACbyC,WAAYkD,IAGb5F,KAAKT,MAAMsG,YAAY7F,KAAKL,SApQ9B,4BAuQC,SAAemG,GACd,IAAIC,EAAQD,EAASC,MACjBC,EAAe,CAClB9D,GAAI6D,EAAM,GAAGE,UACb9D,IAAK4D,EAAM,GAAGE,UACd7D,MAAO2D,EAAM,GAAGE,UAChB5D,IAAK0D,EAAM,GAAGE,UACd3D,MAAOyD,EAAM,GAAGE,UAChB1D,IAAKwD,EAAM,GAAGE,WAGXC,EAAWJ,EAAShD,MACpBqD,EAASL,EAASM,QAAQC,cAC1BC,EAAW,GACLC,EAAY7B,EAAO8B,cAEvB,GAAmC,IAA/BV,EAASW,WAAWC,OACpB,GAAkB,IAAdH,EACA,IAAK,IAAII,EAAI,EAAGA,EAAIb,EAASW,WAAW,GAAG1D,MAAM2D,OAAQC,IACrDL,EAAS7F,KAAKqF,EAASW,WAAW,GAAG1D,MAAM4D,GAAG9B,KAAKnE,WAEpD,GAAI6F,GAAa,GAAKA,GAAa,GAAgD,iBAA3CT,EAASW,WAAW,GAAGG,WAAWlG,KAC7E,IAAK,IAAIiG,EAAI,EAAGA,EAAIb,EAASW,WAAW,GAAG1D,MAAM2D,OAAQC,IACrDL,EAAS7F,KAAKqF,EAASW,WAAW,GAAG1D,MAAM4D,GAAG9B,KAAKnE,WAGvD,IAAK,IAAIiG,EAAI,EAAGA,EAAIb,EAAS/C,MAAM2D,OAAQC,IACvCL,EAAS7F,KAAKqF,EAAS/C,MAAM4D,GAAG9B,KAAKnE,WAI7C,IAAK,IAAIiG,EAAI,EAAGA,EAAIb,EAAS/C,MAAM2D,OAAQC,IACvCL,EAAS7F,KAAKqF,EAAS/C,MAAM4D,GAAG9B,KAAKnE,MAInD,IAAK,IAAIiG,EAAI,EAAGA,EAAIL,EAASI,OAAQC,IACpCL,EAASK,GAAKL,EAASK,GAAGE,OAAO,GAAGC,cAAgBR,EAASK,GAAGI,MAAM,GAGvE/G,KAAKC,SAAS,CACbgC,UAAW+D,EACXlD,MAAOoD,EACPlD,QAASmD,EACTpD,MAAOuD,IAGRtG,KAAKgF,iBAAiBhF,KAAK8B,eAAemD,cAAce,EAAchG,KAAKL,MAAM8C,OAAQzC,KAAKL,MAAM6C,OAAQxC,KAAKL,MAAMgD,MAAO3C,KAAKL,MAAMiD,WAtT3I,6BA0TC,SAAgB7C,GACf,IAAI6C,EAAS5C,KAAKL,MAAMiD,OACpBJ,EAASxC,KAAKL,MAAM6C,OACpBP,EAAYjC,KAAKL,MAAMsC,UACvBQ,EAASzC,KAAKL,MAAM8C,OACpBuE,EAAYC,SAASlH,EAAMG,OAAOC,OAClC6G,GAAa,IAChBA,EAAY,IACFA,GAAa,EACvBA,EAAY,EACDA,IACXA,EAAY,GAGbhH,KAAKC,SAAS,CACb0C,MAAOqE,IAGRhH,KAAKgF,iBAAiBhF,KAAK8B,eAAemD,cAAchD,EAAWQ,EAAQD,EAAQwE,EAAWpE,MA5UhG,0BAiVC,SAAa7C,EAAOmH,GACnB,IAAIvE,EAAQ3C,KAAKL,MAAMgD,MACnBC,EAAS5C,KAAKL,MAAMiD,OACpBJ,EAASxC,KAAKL,MAAM6C,OACpBP,EAAYjC,KAAKL,MAAMsC,UACvBkF,EAAanH,KAAKL,MAAM8C,OAExB2E,EAAUH,SAASlH,EAAMG,OAAOC,OAEjCiH,GAAW,IACbA,EAAU,IACAA,EAAU,EACpBA,EAAU,EACCA,IACXA,EAAU,GAGM,OAAbF,EACHC,EAAWjF,GAAKkF,EACO,QAAbF,EACVC,EAAWhF,IAAMiF,EACM,UAAbF,EACVC,EAAW/E,MAAQgF,EACI,QAAbF,EACVC,EAAW9E,IAAM+E,EACM,UAAbF,EACVC,EAAW7E,MAAQ8E,EACI,QAAbF,IACVC,EAAW5E,IAAM6E,GAGlBpH,KAAKC,SAAS,CACbwC,OAAQ0E,IAITnH,KAAKgF,iBAAiBhF,KAAK8B,eAAemD,cAAchD,EAAWkF,EAAY3E,EAAQG,EAAOC,MArXhG,0BAyXC,SAAa7C,EAAOmH,GAEnB,IAAIvE,EAAQ3C,KAAKL,MAAMgD,MACnBC,EAAS5C,KAAKL,MAAMiD,OACpBH,EAASzC,KAAKL,MAAM8C,OACpBR,EAAYjC,KAAKL,MAAMsC,UACvBoF,EAAarH,KAAKL,MAAM6C,OAExB4E,EAAUH,SAASlH,EAAMG,OAAOC,OAEjCiH,GAAW,GACbA,EAAU,GACAA,EAAU,EACpBA,EAAU,EACCA,IACXA,EAAU,GAGM,OAAbF,EACHG,EAAWnF,GAAKkF,EACO,QAAbF,EACVG,EAAWlF,IAAMiF,EACM,UAAbF,EACVG,EAAWjF,MAAQgF,EACI,QAAbF,EACVG,EAAWhF,IAAM+E,EACM,UAAbF,EACVG,EAAW/E,MAAQ8E,EACI,QAAbF,IACVG,EAAW9E,IAAM6E,GAGlBpH,KAAKC,SAAS,CACbuC,OAAQ6E,IAITrH,KAAKgF,iBAAiBhF,KAAK8B,eAAemD,cAAchD,EAAWQ,EAAQ4E,EAAY1E,EAAOC,MA9ZhG,iCAkaI,WAAuB,IAAD,OAClB2C,MAAM+B,KAAa9B,MAAK,SAAAC,GAAQ,OAAIA,EAAS8B,UAAQ/B,MAAK,SAAA+B,GAAI,OAAI,EAAKC,iBAAiBD,EAAM,MACpGhC,MAAMkC,KAAajC,MAAK,SAAAC,GAAQ,OAAIA,EAAS8B,UAAQ/B,MAAK,SAAA+B,GAAI,OAAI,EAAKC,iBAAiBD,EAAM,MAC9FhC,MAAMmC,KAAalC,MAAK,SAAAC,GAAQ,OAAIA,EAAS8B,UAAQ/B,MAAK,SAAA+B,GAAI,OAAI,EAAKC,iBAAiBD,EAAM,MAC9FhC,MAAMoC,KAAanC,MAAK,SAAAC,GAAQ,OAAIA,EAAS8B,UAAQ/B,MAAK,SAAA+B,GAAI,OAAI,EAAKC,iBAAiBD,EAAM,MAC9FhC,MAAMqC,KAAapC,MAAK,SAAAC,GAAQ,OAAIA,EAAS8B,UAAQ/B,MAAK,SAAA+B,GAAI,OAAI,EAAKC,iBAAiBD,EAAM,MAC9FhC,MAAMsC,KAAarC,MAAK,SAAAC,GAAQ,OAAIA,EAAS8B,UAAQ/B,MAAK,SAAA+B,GAAI,OAAI,EAAKC,iBAAiBD,EAAM,MAC9FhC,MAAMuC,KAAatC,MAAK,SAAAC,GAAQ,OAAIA,EAAS8B,UAAQ/B,MAAK,SAAA+B,GAAI,OAAI,EAAKC,iBAAiBD,EAAM,MAC9FhC,MAAMwC,KAAavC,MAAK,SAAAC,GAAQ,OAAIA,EAAS8B,UAAQ/B,MAAK,SAAA+B,GAAI,OAAI,EAAKC,iBAAiBD,EAAM,QA1ahG,8BA8aC,WAAoB,IAAD,OACdS,EAAehI,KAAKL,MAAMsD,YAAYyB,EAAO8B,cAAgB,GAC7DyB,EAAc,GASlB,OARID,QAAoCE,IAApBF,EAAa,IAChCA,EAAazH,SAAQ,SAAAC,GACpByH,EAAYxH,KACX,wBAAQC,KAAMF,EAAd,SAAsCA,GAAVA,OAKxB,qBAAK2H,UAAU,cAAf,SACL,wBAAQhI,MAAOH,KAAKL,MAAMqC,QAASrB,SAAU,SAACZ,GAAW,EAAKgB,qBAAqBhB,EAAMG,OAAOC,QAAhG,SACE8H,QA3bN,8BAgcI,SAAiBV,EAAMX,GACnB,IAAIwB,EAAe,GACnBA,EAAeb,EAAKc,MAAM,MAOhC,IAFA,IAAIC,EAAiB,GACjBC,EAAS,EACJ5B,EAAI,EAAGA,EAAIyB,EAAa1B,OAAS,EAAGC,IAAK,CACjD,IAAI6B,EAAWJ,EAAazB,GAAG0B,MAAM,MACjCG,EAAS,KAAOD,IAGnBA,EAASC,EAAS,GAClBF,EAAe7H,KAAK+H,EAAS,KAI/B,IAAIR,EAAe,GAMb,OALNA,EAAehI,KAAKL,MAAMsD,aACb2D,EAAa,GAAK0B,EAC/BtI,KAAKC,SAAS,CACbgD,YAAa+E,IAEDM,IAzdf,oBA6dC,WAAU,IAAD,OACJG,EAAO,sBAAKN,UAAU,eAAf,UACN,mBAAGA,UAAU,WAAb,gBACA,mBAAGA,UAAU,WAAb,mBAGDnF,EAAUhD,KAAKL,MAAMqD,QAAU,qBAAKmF,UAAU,UAAUO,IAAK1I,KAAKL,MAAMqD,QAAS2F,IAAI,iBAAmB,KACxGC,EAAa,sBAAKT,UAAU,eAAf,UACZ,uBAAOA,UAAU,cAActD,KAAK,SAAS1E,MAAOH,KAAKL,MAAM6C,OAAON,GAAIvB,SAAU,SAACkI,GAAD,OAAO,EAAK1H,aAAa0H,EAAG,OAAOC,OAAQ,SAACD,GAAD,OAAO,EAAK1H,aAAa0H,EAAG,SAC3J,uBAAOV,UAAU,cAActD,KAAK,SAAS1E,MAAOH,KAAKL,MAAM8C,OAAOP,GAAIvB,SAAU,SAACkI,GAAD,OAAO,EAAK3H,aAAa2H,EAAG,OAAOC,OAAQ,SAACD,GAAD,OAAO,EAAK3H,aAAa2H,EAAG,YAG5JE,EAAc,sBAAKZ,UAAU,eAAf,UACb,uBAAOA,UAAU,cAActD,KAAK,SAAS1E,MAAOH,KAAKL,MAAM6C,OAAOL,IAAKxB,SAAU,SAACkI,GAAD,OAAO,EAAK1H,aAAa0H,EAAG,QAAQC,OAAQ,SAACD,GAAD,OAAO,EAAK1H,aAAa0H,EAAG,UAC7J,uBAAOV,UAAU,cAActD,KAAK,SAAS1E,MAAOH,KAAKL,MAAM8C,OAAON,IAAKxB,SAAU,SAACkI,GAAD,OAAO,EAAK3H,aAAa2H,EAAG,QAAQC,OAAQ,SAACD,GAAD,OAAO,EAAK3H,aAAa2H,EAAG,aAG9JG,EAAc,sBAAKb,UAAU,eAAf,UACb,uBAAOA,UAAU,cAActD,KAAK,SAAS1E,MAAOH,KAAKL,MAAM6C,OAAOH,IAAK1B,SAAU,SAACkI,GAAD,OAAO,EAAK1H,aAAa0H,EAAG,QAAQC,OAAQ,SAACD,GAAD,OAAO,EAAK1H,aAAa0H,EAAG,UAC7J,uBAAOV,UAAU,cAActD,KAAK,SAAS1E,MAAOH,KAAKL,MAAM8C,OAAOJ,IAAK1B,SAAU,SAACkI,GAAD,OAAO,EAAK3H,aAAa2H,EAAG,QAAQC,OAAQ,SAACD,GAAD,OAAO,EAAK3H,aAAa2H,EAAG,aAG9JI,EAAgB,sBAAKd,UAAU,eAAf,UACf,uBAAOA,UAAU,cAActD,KAAK,SAAS1E,MAAOH,KAAKL,MAAM6C,OAAOJ,MAAOzB,SAAU,SAACkI,GAAD,OAAO,EAAK1H,aAAa0H,EAAG,UAAUC,OAAQ,SAACD,GAAD,OAAO,EAAK1H,aAAa0H,EAAG,YACjK,uBAAOV,UAAU,cAActD,KAAK,SAAS1E,MAAOH,KAAKL,MAAM8C,OAAOL,MAAOzB,SAAU,SAACkI,GAAD,OAAO,EAAK3H,aAAa2H,EAAG,UAAUC,OAAQ,SAACD,GAAD,OAAO,EAAK3H,aAAa2H,EAAG,eAGlKK,EAAgB,sBAAKf,UAAU,eAAf,UACf,uBAAOA,UAAU,cAActD,KAAK,SAAS1E,MAAOH,KAAKL,MAAM6C,OAAOF,MAAO3B,SAAU,SAACkI,GAAD,OAAO,EAAK1H,aAAa0H,EAAG,UAAUC,OAAQ,SAACD,GAAD,OAAO,EAAK1H,aAAa0H,EAAG,YACjK,uBAAOV,UAAU,cAActD,KAAK,SAAS1E,MAAOH,KAAKL,MAAM8C,OAAOH,MAAO3B,SAAU,SAACkI,GAAD,OAAO,EAAK3H,aAAa2H,EAAG,UAAUC,OAAQ,SAACD,GAAD,OAAO,EAAK3H,aAAa2H,EAAG,eAGlKM,EAAc,sBAAKhB,UAAU,eAAf,UACb,uBAAOA,UAAU,cAActD,KAAK,SAAS1E,MAAOH,KAAKL,MAAM6C,OAAOD,IAAK5B,SAAU,SAACkI,GAAD,OAAO,EAAK1H,aAAa0H,EAAG,QAAQC,OAAQ,SAACD,GAAD,OAAO,EAAK1H,aAAa0H,EAAG,UAC7J,uBAAOV,UAAU,cAActD,KAAK,SAAS1E,MAAOH,KAAKL,MAAM8C,OAAOF,IAAK5B,SAAU,SAACkI,GAAD,OAAO,EAAK3H,aAAa2H,EAAG,QAAQC,OAAQ,SAACD,GAAD,OAAO,EAAK3H,aAAa2H,EAAG,aAG9JhG,EAAS6B,EAAO0E,eAAiB,sBAAKjB,UAAU,SAAf,UACrC,yCAAe,cAAC,IAAD,CAAUrI,QAASE,KAAKL,MAAMkD,OAAQxC,MAAOL,KAAK6B,WAAYzB,UAAWJ,KAAKsB,yBADxD,OAC0F,KAE3H+H,EAAerJ,KAAKsJ,mBAEpBC,EAAgB7E,EAAO0E,eAAiB,sBAAKjB,UAAU,UAAf,UACrCM,EACAG,EACAG,EACAC,EACAC,EACAC,EACAC,KACO,KAEVK,EAAa9E,EAAO0E,eAAiB,iBAAmB,iBAExDK,EAAiB,UAAYzJ,KAAKL,MAAMoD,MAAM2D,OAAS,SAEvDgD,EAAW1J,KAAKL,MAAMoD,MAAM2D,OAAS,EAAI1G,KAAKL,MAAMoD,MAAM,GAAG8D,OAAO,GAAGC,cAAgB9G,KAAKL,MAAMoD,MAAM,GAAGgE,MAAM,GAAK,KACtH4C,EAAY3J,KAAKL,MAAMoD,MAAM2D,OAAS,EAAI1G,KAAKL,MAAMoD,MAAM,GAAG8D,OAAO,GAAGC,cAAgB9G,KAAKL,MAAMoD,MAAM,GAAGgE,MAAM,GAAK,KAEvH6C,EAAQ5J,KAAKL,MAAMoD,MAAM2D,OAAS,EAAI,mBAAGyB,UAAU,OAAO0B,MAAO,CAACC,gBAAiB9J,KAAKuB,aAAavB,KAAKL,MAAMoD,MAAM,KAAhF,SAAuF4G,IAAiB,KAE9II,EAAc/J,KAAKL,MAAMoD,MAAM2D,OAAS,EAAI,sBAAKyB,UAAU,UAAU0B,MAAO,CAACG,oBAAqBP,GAAtD,UAC1C,mBAAGtB,UAAU,OAAO0B,MAAO,CAACC,gBAAiB9J,KAAKuB,aAAavB,KAAKL,MAAMoD,MAAM,KAAhF,SAAuF2G,IACtFE,KACO,KAEVK,EAAWjK,KAAKL,MAAM0D,SAA+B,IAAnBrD,KAAKT,MAAMkF,IAAc,cAAC,IAAD,CAAUpE,MAASL,KAAKL,MAAM2D,SAAUlD,UAAaJ,KAAK0B,gBAA1D,2BAAqG,KAEhKwI,EAA4C,qBAApBlK,KAAKL,MAAMC,KAAwBI,KAAKL,MAAMC,IAAI8G,OAAS,EAAI,sBAAKyB,UAAU,YAAf,UAC1F,+CACA,sBAAKgC,UAAU,iBAAf,UAEC,wBAAQC,QAASpK,KAAKyB,YAAtB,kBACCwI,KAEF,sBAAKE,UAAU,iBAAf,UACC,uBAAOhC,UAAU,cAActD,KAAK,OAAO1E,MAAOH,KAAKL,MAAMyD,UAAWyG,MAAO,CAACQ,MAAO,MAAOC,OAAQ,SACtG,wBAAQF,QAASpK,KAAKwB,YAAtB,wBAEO,KAEH,OACI,sBAAK2G,UAAY,UAAjB,UACPkB,EACD,uBACCrG,EACD,uBACC+G,EACD,sBAAK5B,UAAU,YAAf,UACC,uCACA,uBAAOtD,KAAK,SAAS1E,MAAOH,KAAKL,MAAMgD,MAAOhC,SAAUX,KAAKoB,gBAAiB0H,OAAQ9I,KAAKoB,qBAE5F,sBAAK+G,UAAU,SAAf,UACC,yCACA,cAAC,IAAD,CAAU9H,MAAOL,KAAK4B,WAAY9B,QAASE,KAAKL,MAAMiD,OAAQxC,UAAWJ,KAAKqB,4BAE9EwB,EACD,sBAAKsF,UAAU,UAAU0B,MAAO,CAACG,oBAAqBR,GAAtD,UACC,sBAAKrB,UAAU,UAAf,UACC,mBAAGA,UAAU,WAAb,mBACA,uBACA,oBAAGA,UAAU,WAAb,iBAA6BnI,KAAKL,MAAM+C,WAAWR,MACnD,uBACA,oBAAGiG,UAAU,WAAb,kBAA8BnI,KAAKL,MAAM+C,WAAWP,OACpD,uBACA,oBAAGgG,UAAU,WAAb,kBAA8BnI,KAAKL,MAAM+C,WAAWL,OACpD,uBACA,oBAAG8F,UAAU,WAAb,qBAAiCnI,KAAKL,MAAM+C,WAAWN,SACvD,uBACA,oBAAG+F,UAAU,WAAb,qBAAiCnI,KAAKL,MAAM+C,WAAWJ,SACvD,uBACA,oBAAG6F,UAAU,WAAb,kBAA8BnI,KAAKL,MAAM+C,WAAWH,UAEpDgH,KAEDW,SAhlBL,GAA6BtJ,IAAMC,WAslBpBC,Q,kNC3lBFyJ,EAAb,kDACI,WAAahL,GAAQ,IAAD,8BAChB,cAAMA,IACPiL,uBAAyB,EAAKA,uBAAuB/K,KAA5B,gBAC9B,EAAKgL,uBAAyB,EAAKA,uBAAuBhL,KAA5B,gBAC9B,EAAKiL,eAAiB,EAAKA,eAAejL,KAApB,gBACtB,EAAKkL,cAAgB,EAAKA,cAAclL,KAAnB,gBACrB,EAAKmL,gBAAkB,EAAKA,gBAAgBnL,KAArB,gBACvB,EAAKoL,iBAAmB,EAAKA,iBAAiBpL,KAAtB,gBACxB,EAAKqL,cAAgB,EAAKA,cAAcrL,KAAnB,gBACrB,EAAKsL,wBAA0B,EAAKA,wBAAwBtL,KAA7B,gBAC/B,EAAKuL,wBAA0B,EAAKA,wBAAwBvL,KAA7B,gBAC/B,EAAKwL,cAAgB,EAAKA,cAAcxL,KAAnB,gBACrB,EAAKyL,eAAiB,EAAKA,eAAezL,KAApB,gBAEtB,EAAK0L,eAAiB,IAAIA,IAE1B,EAAKC,cAAgB,CACpB,MAAS,EACA,iBAAkB,EAClB,KAAQ,EACR,UAAa,EACb,KAAQ,EACR,eAAgB,EAChB,IAAO,EACP,eAAgB,EACzB,2BAA4B,EAC5B,aAAc,IAGf,EAAKC,cAAgB,CACX,OAAW,EACX,SAAa,EACb,OAAW,EACX,MAAU,EACV,QAAY,GAGtB,EAAKC,aAAe,CAAC,SACrB,EAAKC,aAAe,CAAC,QAAS,iBAAkB,OAAQ,aACxD,EAAKC,aAAe,CAAC,QAAS,iBAAkB,OAAQ,YAAa,OAAQ,gBAC7E,EAAKC,cAAgB,CAAC,QAAS,iBAAkB,OAAQ,YAAa,OAAQ,OAC9E,EAAKC,eAAiB,CAAC,QAAS,iBAAkB,OAAQ,YAAa,OAAQ,MAAO,aAAc,2BAA4B,gBAEhI,EAAKC,YAAc,KAEnB,EAAKC,YAAc,CAAC,SAAS,WAAW,SAAS,QAAQ,WAEzD,EAAKjM,MAAQ,CACZkM,YAAa,GACbC,YAAa,GACb5I,YAAY,EACZ6I,gBAAiB,KACjBC,aAAa,EACbC,QAAS,QACTN,YAAa,MAEdjH,EAAO0E,gBAAiB,EACxB1E,EAAO8B,cAAgB,EAzDD,EADxB,iDA6DC,WACC,GAA8B,qBAAlB9B,EAAOC,OAAoD,qBAAlBD,EAAOE,MAA5D,CAGA,IAAIsH,EAAQxH,EAAOC,MAAMhF,MAAMsC,UAC3BkK,EAAUzH,EAAOC,MAAMhF,MAAMiD,OAC7BwJ,EAAQ1H,EAAOE,MAAMjF,MAAMsC,UAC3BoK,EAAU3H,EAAOE,MAAMjF,MAAMiD,OAC7B0J,EAAO,CACVpK,GAAI,EACJC,IAAK,EACLC,MAAO,EACPC,IAAK,EACLC,MAAO,EACPC,IAAK,GAEFgK,EAAO,CACVrK,GAAI,EACJC,IAAK,EACLC,MAAO,EACPC,IAAK,EACLC,MAAO,EACPC,IAAK,GAEFiK,EAAO,CACVtK,GAAI,EACJC,IAAK,EACLC,MAAO,EACPC,IAAK,EACLC,MAAO,EACPC,IAAK,GAEFkK,EAAO,CACVvK,GAAI,EACJC,IAAK,EACLC,MAAO,EACPC,IAAK,EACLC,MAAO,EACPC,IAAK,GAENmC,EAAOC,MAAM1E,SAAS,CACrBuC,OAAQ8J,EACR7J,OAAQ8J,EACR5J,MAAO,IAER+B,EAAOE,MAAM3E,SAAS,CACrBuC,OAAQgK,EACR/J,OAAQgK,EACR9J,MAAO,IAER+B,EAAOC,MAAMK,iBAAiBN,EAAOC,MAAM7C,eAAemD,cAAciH,EAAOI,EAAMC,EAAM,EAAGJ,IAC9FzH,EAAOE,MAAMI,iBAAiBN,EAAOE,MAAM9C,eAAemD,cAAcmH,EAAOI,EAAMC,EAAM,EAAGJ,OAhHhG,+BAyHI,WAuBF3H,EAAO8B,cAAgB,IAhJzB,oCAoJC,SAAuBV,GACtB9F,KAAKC,SAAS,CACb4L,YAAY,eAAK/F,OAtJpB,oCA2JC,SAAuBA,GACtB9F,KAAKC,SAAS,CACb6L,YAAY,eAAKhG,OA7JpB,qCAiKC,SAAwB4G,GACvB1M,KAAKC,SAAS,CACbgM,QAASS,MAnKZ,qCAuKC,SAAwBC,GACvB3M,KAAKC,SAAS,CACb2M,QAASD,MAzKZ,2BA6KC,WACC,GAA8B,qBAAlBjI,EAAOC,OAAoD,qBAAlBD,EAAOE,MAA5D,CAGA,IAAIiI,EAAYnI,EAAOC,MAAMhF,MAC7B+E,EAAOC,MAAM1E,SAAS,CAClBL,IAAK8E,EAAOE,MAAMjF,MAAMC,IAC3BoC,QAAS0C,EAAOE,MAAMjF,MAAMqC,QAC5BC,UAAWyC,EAAOE,MAAMjF,MAAMsC,UAC9BO,OAAQkC,EAAOE,MAAMjF,MAAM6C,OAC3BC,OAAQiC,EAAOE,MAAMjF,MAAM8C,OAC3BC,WAAYgC,EAAOE,MAAMjF,MAAM+C,WAC/BC,MAAO+B,EAAOE,MAAMjF,MAAMgD,MAC1BC,OAAQ8B,EAAOE,MAAMjF,MAAMiD,OAC3BC,OAAQ6B,EAAOE,MAAMjF,MAAMkD,OAC3BC,MAAO4B,EAAOE,MAAMjF,MAAMmD,MAC1BC,MAAO2B,EAAOE,MAAMjF,MAAMoD,MAC1BC,QAAS0B,EAAOE,MAAMjF,MAAMqD,QAC5BE,WAAYwB,EAAOE,MAAMjF,MAAMuD,WAC/BC,UAAWuB,EAAOE,MAAMjF,MAAMwD,YAE/BuB,EAAOE,MAAM3E,SAAS,CACrBL,IAAKiN,EAAUjN,IACfoC,QAAS6K,EAAU7K,QACnBC,UAAW4K,EAAU5K,UACrBO,OAAQqK,EAAUrK,OAClBC,OAAQoK,EAAUpK,OAClBC,WAAYmK,EAAUnK,WACtBC,MAAOkK,EAAUlK,MACjBC,OAAQiK,EAAUjK,OAClBC,OAAQgK,EAAUhK,OAClBC,MAAO+J,EAAU/J,MACjBC,MAAO8J,EAAU9J,MACjBC,QAAS6J,EAAU7J,QACnBE,WAAY2J,EAAU3J,WACtBC,UAAW0J,EAAU1J,eAhNxB,2BAoNC,WACC,OAAOnD,KAAKL,MAAMkM,cArNpB,mEAyNC,WAAqB9L,GAArB,eAAA+M,EAAA,6DAEC9M,KAAKC,SAAS,CACb+L,aAAa,IAHf,SAKuBhM,KAAKmL,eAAeA,eAAenL,KAAKL,MAAMkM,YAAa7L,KAAKL,MAAMmM,YAAapH,EAAO8B,cAAe,CAACyF,QAASjM,KAAKoL,cAAcpL,KAAKL,MAAMsM,SAAUW,QAAS5M,KAAKqL,cAAcrL,KAAKL,MAAMiN,WALzN,OAMCG,GADIA,EALL,QAMuBhG,MAAM,EAAG,GAC/B/G,KAAKC,SAAS,CACb8L,gBAAiBgB,EACjBf,aAAa,IATf,gDAzND,oFAsOC,WACCtH,EAAO0E,gBAAkB1E,EAAO0E,eAChCpJ,KAAKgN,gBAxOP,8BA2OC,SAAiBjN,GAChB2E,EAAO8B,cAAgBS,SAASlH,EAAMG,OAAOC,OAC7CH,KAAKC,SAAS,CACbgM,QAAS,UAEVjM,KAAKgN,cACLtI,EAAOC,MAAMqI,cACbtI,EAAOE,MAAMoI,gBAlPf,0BAqPC,SAAanI,GACZ,OAAQA,GACP,IAAK,OACJ,MAAO,qBACR,IAAK,QACJ,MAAO,qBACR,IAAK,WACJ,MAAO,qBACR,IAAK,QACJ,MAAO,qBACR,IAAK,MACJ,MAAO,sBACR,IAAK,WACJ,MAAO,oBACR,IAAK,SACJ,MAAO,qBACR,IAAK,SACJ,MAAO,sBACR,IAAK,SACJ,MAAO,sBACR,IAAK,UACJ,MAAO,qBACR,IAAK,MACJ,MAAO,qBACR,IAAK,OACJ,MAAO,qBACR,IAAK,QACJ,MAAO,qBACR,IAAK,SACJ,MAAO,qBACR,IAAK,OACJ,MAAO,oBACR,IAAK,QACJ,MAAO,sBACR,IAAK,QACJ,MAAO,sBACR,QACC,MAAO,yBA1RX,4BA8RC,WAAkB,IAAD,OACZoI,EAAejN,KAAKL,MAAMoM,gBAC1B9D,EAAc,GAqBlB,OApBAgF,EAAa1M,SAAQ,SAAAC,GAIpB,IAHA,IAAI0M,EAAQ,EAAK3L,aAAaf,EAAQ2M,WAElCC,EAAa,6BAA+BF,EACvCvG,EAAI,EAAGA,EAAI,EAAGA,IAErByG,GAJgB,IAGbzG,EACW,UAEA,KAAOuG,EAGvBE,GAAc,KAAOF,EAAQ,IAC7BjF,EAAYxH,KACX,sBAAK0H,UAAU,WAAW0B,MAAO,CAAEwD,gBAAiBD,GAApD,UACC,4BAAI5M,EAAQ8M,OACZ,4BAAI9M,EAAQ+M,QAAU,IAAM/M,EAAQgN,UACpC,4BAAIhN,EAAQ2M,mBAIRlF,IArTT,oBAwTI,WACF,IAAIwF,EAAWzN,KAAKL,MAAMoM,gBAAkB/L,KAAKkL,iBAAmB,KAChEwC,EAAmB1N,KAAKL,MAAMqM,YAA6F,wBAAQ7D,UAAU,SAASwF,YAAY,EAAvC,4BAA/E,wBAAQxF,UAAU,SAASiC,QAASpK,KAAK0K,eAAzC,uBAC5CkD,EAAsBlJ,EAAO0E,eAAiB,8BAC9C,sBAAKjB,UAAU,kBAAkBxH,SAAUX,KAAK6K,iBAAkB1K,MAAOuE,EAAO8B,cAAhF,UACC,qDAAwB9B,EAAO8B,iBAC/B,uBAAOqH,gBAAc,EAAChJ,KAAK,QAAQ1E,MAAO,EAAGO,KAAK,eAFnD,KAGC,uBAAOmE,KAAK,QAAQ1E,MAAO,EAAGO,KAAK,eAHpC,KAIC,uBAAOmE,KAAK,QAAQ1E,MAAO,EAAGO,KAAK,eAJpC,KAKC,uBAAOmE,KAAK,QAAQ1E,MAAO,EAAGO,KAAK,eALpC,KAMC,uBAAOmE,KAAK,QAAQ1E,MAAO,EAAGO,KAAK,eANpC,UAQQ,KAERoN,EAAoBpJ,EAAO0E,gBAA2C,IAAzB1E,EAAO8B,cACrD,8BACC,sBAAK2B,UAAU,kBAAkBxH,SAAUX,KAAK+N,cAAhD,UACC,yCACA,cAAC,IAAD,CAAUjO,QAASE,KAAKL,MAAMsM,QAAS5L,MAAOL,KAAKsL,aAAclL,UAAWJ,KAAK+K,+BAE3E,KAEPiD,EAAoBtJ,EAAO0E,gBAA2C,IAAzB1E,EAAO8B,cACrD,8BACC,sBAAK2B,UAAU,kBAAkBxH,SAAUX,KAAK+N,cAAhD,UACC,yCACA,cAAC,IAAD,CAAUjO,QAASE,KAAKL,MAAMsM,QAAS5L,MAAOL,KAAKuL,aAAcnL,UAAWJ,KAAK+K,+BAE3E,KAEPkD,EAAoBvJ,EAAO0E,gBAA2C,IAAzB1E,EAAO8B,cACrD,8BACC,sBAAK2B,UAAU,kBAAkBxH,SAAUX,KAAK+N,cAAhD,UACC,yCACA,cAAC,IAAD,CAAUjO,QAASE,KAAKL,MAAMsM,QAAS5L,MAAOL,KAAKwL,aAAcpL,UAAWJ,KAAK+K,+BAE3E,KAEPmD,GAAqBxJ,EAAO0E,gBAA4C,IAAzB1E,EAAO8B,eAAgD,IAAzB9B,EAAO8B,cAM7E,KALR,8BACC,sBAAK2B,UAAU,kBAAkBxH,SAAUX,KAAK+N,cAAhD,UACC,yCACA,cAAC,IAAD,CAAUjO,QAASE,KAAKL,MAAMsM,QAAS5L,MAAOL,KAAKyL,cAAerL,UAAWJ,KAAK+K,+BAInFoD,GAAsBzJ,EAAO0E,gBAA4C,IAAzB1E,EAAO8B,eAAgD,IAAzB9B,EAAO8B,eAAgD,IAAzB9B,EAAO8B,cAM5G,KALR,8BACC,sBAAK2B,UAAU,kBAAkBxH,SAAUX,KAAK+N,cAAhD,UACC,yCACA,cAAC,IAAD,CAAUjO,QAASE,KAAKL,MAAMsM,QAAS5L,MAAOL,KAAK0L,eAAgBtL,UAAWJ,KAAK+K,+BAIpFqD,GAAmB1J,EAAO0E,gBAA4C,IAAzB1E,EAAO8B,eAAgD,IAAzB9B,EAAO8B,cAM5E,KALV,qBAAK2B,UAAU,WAAf,SACC,sBAAKA,UAAU,kBAAkBxH,SAAUX,KAAKqO,cAAhD,UACC,yCACA,cAAC,IAAD,CAAUvO,QAASE,KAAKL,MAAMiN,QAASvM,MAAOL,KAAK4L,YAAaxL,UAAWJ,KAAKgL,+BAI9EsD,EAAYtO,KAAKL,MAAMoM,gBAC1B,qBAAK5D,UAAU,WAAf,SACEsF,IACO,KAEJ,OACL,sBAAKtF,UAAY,MAAM0B,MAAO,CAAC0E,SAAU,IAAzC,UACC,sBAAKpG,UAAU,iBAAf,UACC,wBAAQA,UAAU,aAAlB,SACC,yDAED,qBAAKA,UAAU,YAAf,SACC,cAAC,IAAD,CAAQqG,WAAcxO,KAAKL,MAAMkM,mBAGnC,sBAAK1D,UAAU,UAAf,UACC,sBAAKA,UAAU,WAAf,UACC,kDACA,cAAC,IAAD,CAAS1D,IAAK,EAAGoB,YAAa7F,KAAKwK,4BAEpC,sBAAKrC,UAAU,WAAf,UACC,wBAAQA,UAAU,SAAS0B,MAAO,CAAC0E,SAAU,GAAIzE,gBAAgB,SAAUM,QAASpK,KAAK2K,cAAzF,0BACA,uBACA,uBACA,uBACC+C,EACD,uBACA,iDACA,uBAAO7I,KAAK,WAAWgF,MAAO,CAACS,OAAQ,GAAID,MAAO,GAAIP,gBAAgB,SAAUnJ,SAAUX,KAAK4K,kBAC/F,uBACA,uBACA,uBACA,wBAAQzC,UAAU,SAAS0B,MAAO,CAAE0E,SAAU,GAAIzE,gBAAiB,SAAWM,QAASpK,KAAKiL,cAA5F,4BACA,sBAAK9C,UAAU,eAAf,UACEyF,EACAE,EACAE,EACAC,EACAC,EACAC,KAEF,uBACA,0BAED,sBAAKhG,UAAU,WAAf,UACC,kDACA,cAAC,IAAD,CAAS1D,IAAK,EAAGoB,YAAa7F,KAAKyK,+BAGrC,sBAAKtC,UAAU,WAAW0B,MAAO,CAAExG,QAAS,OAAQoL,SAAU,QAA9D,UACC,qBAAKtG,UAAU,gBAAf,SACEiG,IAEF,mBAAGvE,MAAO,CAAE6E,eAAgB,aAA5B,+BACCJ,YA5aN,GAA8B1N,IAAMC,WAmbrB0J,Q,yKCtbFoE,EAAb,kDACI,WAAYpP,GAAQ,IAAD,uBACf,cAAMA,IACDqP,UAAY,EAAKA,UAAUnP,KAAf,gBACjB,EAAKoP,WAAa,EAAKA,WAAWpP,KAAhB,gBAClB,EAAKqP,YAAc,EAAKA,YAAYrP,KAAjB,gBACnB,EAAKsP,cAAgB,EAAKA,cAActP,KAAnB,gBACrB,EAAKuP,gBAAkB,EAAKA,gBAAgBvP,KAArB,gBACvB,EAAKwP,YAAc,EAAKA,YAAYxP,KAAjB,gBACnB,EAAKyP,eAAiB,EAAKA,eAAezP,KAApB,gBACtB,EAAK0P,YAAc,EAAKA,YAAY1P,KAAjB,gBACzB,EAAK2P,eAAiB,EAAKA,eAAe3P,KAApB,gBAChB,IAAI4P,GAAgB,EAXL,OAajB,EAAK9P,MAAMI,QACd0P,GAAgB,GAGX,EAAK1P,MAAQ,CACT2P,UAAU,EACV1P,IAAK,GACL2P,SAAU,GACVC,SAAU,GACVC,WAAY,GACZC,YAAa,GACblB,WAAY,GACZmB,QAAQ,GACRC,oBAAqBP,EACrBQ,kBAAkB,GA3BP,EADvB,kDAiCI,cAjCJ,yBAqCI,SAAY9P,GACRC,KAAKC,SAAS,CACVsP,SAAUxP,EAAMG,OAAOC,MACvB0P,kBAAkB,MAxC9B,4BA6CI,SAAe9P,GACXC,KAAKC,SAAS,CACVuP,SAAUzP,EAAMG,OAAOC,MACvB0P,kBAAkB,MAhD9B,yBAoDI,WACI7P,KAAKC,SAAS,CACVwP,YAAY,EACZC,aAAa,MAvDzB,uBA2DI,WAAY,IAAD,OACP1P,KAAKmP,cAEL3L,IAASsM,OAAOC,2BAA2B/P,KAAKL,MAAM4P,SAAUvP,KAAKL,MAAM6P,UACtEhK,MAAK,SAACwK,GAEH,IACIC,EADAC,EAAOF,EAAeE,KAE1B1M,IAASC,WAAWC,IAAI,SAAWwM,EAAKtQ,KAAKuQ,KAAK,SAAS,SAACC,GACxDH,EAAWG,EAAKnM,MAChB,EAAKhE,SAAS,CACVqP,UAAU,EACV1P,IAAKsQ,EAAKtQ,IACV4O,WAAYyB,EAASzB,gBAG7B9J,EAAOC,MAAM1E,SAAS,CAAEL,IAAKsQ,EAAKtQ,MAClC8E,EAAOE,MAAM3E,SAAS,CAAEL,IAAKsQ,EAAKtQ,SAEnCyQ,OAAM,SAACC,GAEN,IAAIC,EAAeD,EAAME,QACzB7M,QAAQC,IAAI2M,GACZ,EAAKtQ,SAAS,CACVwP,WAAYc,EACZV,kBAAkB,SApFtC,wBA0FI,WAAc,IAAD,OACT7P,KAAKmP,cACL3L,IAASsM,OAAOW,+BAA+BzQ,KAAKL,MAAM4P,SAAUvP,KAAKL,MAAM6P,UAC1EhK,MAAK,SAACwK,GAEH,IAAIE,EAAOF,EAAeE,KAE1B1M,IAASC,WAAWC,IAAI,SAAWwM,EAAKtQ,KAAK8Q,IAAI,CAC7CpB,UAAU,EACV1P,IAAKsQ,EAAKtQ,IACV2P,SAAU,EAAK5P,MAAM4P,SACrBC,SAAU,EAAK7P,MAAM6P,SACrBC,YAAY,EACZC,aAAa,EACblB,WAAY,GACZmB,QAAQ,GACRE,kBAAkB,IAEtB,EAAK5P,SAAS,CACVqP,UAAU,EACV1P,IAAKsQ,EAAKtQ,SAKjByQ,OAAM,SAACC,GAEJ,IAAIC,EAAeD,EAAME,QACzB7M,QAAQC,IAAI2M,GACZ,EAAKtQ,SAAS,CACVyP,YAAaa,EACbV,kBAAkB,SAzHtC,yBA8HI,WAAc,IAAD,OACT7P,KAAKmP,cAEL3L,IAASsM,OAAOa,UACXnL,MAAK,WACFhC,IAASC,WAAWC,IAAI,SAAW,EAAK/D,MAAMC,KAAKgR,OAAO,CACtDtB,UAAW,IAEf,EAAKrP,SAAS,CACVqP,UAAU,EACV1P,IAAK,GACL2P,SAAU,GACVC,SAAU,GACVhB,WAAY,GACZqB,kBAAkB,IAEtBnL,EAAOC,MAAM1E,SAAS,CAAEL,IAAK,KAC7B8E,EAAOE,MAAM3E,SAAS,CAAEL,IAAK,QAEhCyQ,OAAM,SAACC,GAEJ,IAAIC,EAAeD,EAAME,QACzB7M,QAAQC,IAAI2M,GACZ,EAAKtQ,SAAS,CACVwP,WAAYc,EACZV,kBAAkB,SAvJtC,+BA4JI,YAC2C,IAAnC7P,KAAKL,MAAMiQ,sBACXiB,cACA7Q,KAAKC,SAAS,CACV2P,qBAAqB,OAhKrC,2BAsKI,WAEI,IAAIkB,EAAqB9Q,KAAKL,MAAM+P,YAC9BA,EAAqC,KAAvBoB,EAA4B,4BAAIA,IAA0B,KAE1EC,EAAoB/Q,KAAKL,MAAM8P,WAC7BA,EAAmC,KAAtBsB,EAA2B,4BAAIA,IAAyB,KAGrEC,EADOhR,KAAKL,MAAM2P,SACQ,cAAC,IAAD,CAAU7O,MAAI,EAACwQ,GAAI,CAAEC,SAAU,IAAKvR,MAAO,CAAEC,IAAKI,KAAKL,MAAMC,IAAK2P,SAAUvP,KAAKL,MAAM4P,SAAUC,SAAUxP,KAAKL,MAAM6P,SACjJI,oBAAqB5P,KAAKL,MAAMiQ,wBAA6B,KAElE,OACI,sBAAKzF,UAAU,gBAAf,UACI,wCACA,uBAAOtF,KAAK,OAAOlE,SAAUX,KAAKiP,YAAanG,OAAQ9I,KAAKiP,cACxE,uBACY,2CACA,uBAAOpK,KAAK,WAAWlE,SAAUX,KAAKkP,eAAgBpG,OAAQ9I,KAAKkP,iBACnE,sBAAK/G,UAAU,gBAAf,UACI,wBAAQiC,QAASpK,KAAK4O,UAAWuC,SAAUnR,KAAKL,MAAMkQ,iBAAtD,oBACA,wBAAQzF,QAASpK,KAAK6O,WAAYsC,SAAUnR,KAAKL,MAAMkQ,iBAAvD,wBAEJ,sBAAKhG,MAAO,CAAC0E,SAAU,IAAvB,UACKkB,EACAC,EACAsB,UAhMrB,6BAwMI,WACI,IAAII,EAAkBpR,KAAKL,MAAM4P,SAGjC,OACI,sBAAKpF,UAAU,kBAAf,UACI,wCAAWiH,EAAX,OACA,qBAAKjJ,UAAU,kBAAf,SACI,wBAAQiC,QAAWpK,KAAK8O,YAAaqC,SAAUnR,KAAKL,MAAMkQ,iBAA1D,4BAhNpB,oBA4NI,WACI,IACIwB,EAA4B,KADnBrR,KAAKL,MAAMC,IACaI,KAAK+O,gBAAkB/O,KAAKgP,kBACjE,OACI,qBAAK7G,UAAY,SAAjB,SACKkJ,QAjOjB,GAA4BzQ,IAAMC,WAuOnB8N,Q,kDC9Of,YAmBekC,IAjBf,WAaIrN,IAAS8N,cAZY,CACjBC,OAAQ,0CACRC,WAAY,2BACZC,UAAW,WACXC,cAAe,uBACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,eACfC,YAAa,kDAKjBtO,IAASuO,c,oDChBAhQ,EAAb,WACI,aAAe,oBACX/B,KAAKiF,cAAgBjF,KAAKiF,cAAcxF,KAAKO,MAFrD,iDAKA,SAAciC,EAAW+P,EAAKC,EAAKtP,EAAOC,GACtC,IAAIsP,EAAatP,EAAO0C,cAUxB,MATiB,CACbpD,GAAIlC,KAAKmS,UAAUlQ,EAAUC,GAAI8P,EAAI9P,GAAI+P,EAAI/P,GAAIS,EAAOuP,GACxD/P,IAAKnC,KAAKoS,UAAUnQ,EAAUE,IAAK6P,EAAI7P,IAAK8P,EAAI9P,IAAKQ,EAAOuP,GAC5D7P,IAAKrC,KAAKqS,WAAWpQ,EAAUI,IAAK2P,EAAI3P,IAAK4P,EAAI5P,IAAKM,EAAOuP,GAC7D9P,MAAOpC,KAAKsS,YAAYrQ,EAAUG,MAAO4P,EAAI5P,MAAO6P,EAAI7P,MAAOO,EAAOuP,GACtE5P,MAAOtC,KAAKuS,aAAatQ,EAAUK,MAAO0P,EAAI1P,MAAO2P,EAAI3P,MAAOK,EAAOuP,GACvE3P,IAAKvC,KAAKwS,SAASvQ,EAAUM,IAAKyP,EAAIzP,IAAK0P,EAAI1P,IAAKI,EAAOuP,MAbnE,uBAoBC,SAAUO,EAAYC,EAAUC,EAAUhQ,EAAOC,GAC9C,IAAIV,GAAO,EAAIuQ,EAAaE,EAAWC,KAAKC,MAAMH,EAAW,IAAM/P,EAGnE,OADAT,GADAA,EAAK0Q,KAAKC,MAAM3Q,EAAK,MACXS,EAAQ,KAvBtB,uBA2BC,SAAUmQ,EAAYC,EAAUC,EAAUrQ,EAAOC,GAC9C,IAAIqQ,GAAW,EAAIH,EAAaE,EAAWJ,KAAKC,MAAME,EAAW,IAAMpQ,EACvEsQ,EAASL,KAAKC,MAAMI,EAAS,KAC7BA,GAAkB,EAClB,IAAIC,EAAa,EAUjB,MATe,WAAXtQ,GAAkC,UAAXA,GACZ,YAAXA,GAAmC,YAAXA,IACxBsQ,EAAa,KAEF,SAAXtQ,GAAgC,UAAXA,GACV,WAAXA,GAAkC,SAAXA,IACvBsQ,EAAa,IAEjBD,EAASL,KAAKC,MAAMI,EAASC,KAxCjC,wBA4CC,SAAWC,EAAaC,EAAWC,EAAW1Q,EAAOC,GAClD,IAAI0Q,GAAY,EAAIH,EAAcE,EAAYT,KAAKC,MAAMO,EAAY,IAAMzQ,EAC3E2Q,EAAUV,KAAKC,MAAMS,EAAU,KAC/BA,GAAoB,EACpB,IAAIJ,EAAa,EAUjB,MATe,SAAXtQ,GAAgC,YAAXA,GACV,WAAXA,GAAkC,QAAXA,IACvBsQ,EAAa,KAEF,WAAXtQ,GAAkC,UAAXA,GACZ,SAAXA,GAAgC,WAAXA,IACrBsQ,EAAa,IAEjBI,EAAUV,KAAKC,MAAMS,EAAUJ,KAzDnC,yBA6DC,SAAYK,EAAcC,EAAYC,EAAY9Q,EAAOC,GACtD,IAAI8Q,GAAa,EAAIH,EAAeE,EAAab,KAAKC,MAAMW,EAAa,IAAM7Q,EAC/E+Q,EAAWd,KAAKC,MAAMa,EAAW,KACjCA,GAAsB,EACtB,IAAIR,EAAa,EAUjB,MATe,WAAXtQ,GAAkC,SAAXA,GACZ,UAAXA,GAAiC,SAAXA,IACtBsQ,EAAa,KAEF,YAAXtQ,GAAmC,WAAXA,GACb,UAAXA,GAAiC,YAAXA,IACtBsQ,EAAa,IAEjBQ,EAAWd,KAAKC,MAAMa,EAAWR,KA1ErC,0BA8EC,SAAaS,EAAeC,EAAaC,EAAalR,EAAOC,GAC1D,IAAIkR,GAAc,EAAIH,EAAgBE,EAAcjB,KAAKC,MAAMe,EAAc,IAAMjR,EACnFmR,EAAYlB,KAAKC,MAAMiB,EAAY,KACnCA,GAAwB,EACxB,IAAIZ,EAAa,EAUjB,MATe,SAAXtQ,GAAgC,WAAXA,GACV,UAAXA,GAAiC,YAAXA,IACtBsQ,EAAa,KAEF,YAAXtQ,GAAmC,QAAXA,GACb,UAAXA,GAAiC,SAAXA,IACtBsQ,EAAa,IAEjBY,EAAYlB,KAAKC,MAAMiB,EAAYZ,KA3FvC,sBA+FC,SAASa,EAAWC,EAASC,EAAStR,EAAOC,GAC1C,IAAIsR,GAAU,EAAIH,EAAYE,EAAUrB,KAAKC,MAAMmB,EAAU,IAAMrR,EACnEuR,EAAQtB,KAAKC,MAAMqB,EAAQ,KAC3BA,GAAgB,EAChB,IAAIhB,EAAa,EAUjB,MATe,UAAXtQ,GAAiC,UAAXA,GACX,UAAXA,GAAiC,UAAXA,IACtBsQ,EAAa,KAEF,UAAXtQ,GAAiC,YAAXA,GACX,UAAXA,GAAiC,UAAXA,IACtBsQ,EAAa,IAEjBgB,EAAQtB,KAAKC,MAAMqB,EAAQhB,OA5G/B,KAiHenR,O,gCCjHA,QAA0B,2C,gCCA1B,QAA0B,2C,gCCA1B,QAA0B,2C,gCCA1B,QAA0B,2C,gCCA1B,QAA0B,2C,gCCA1B,QAA0B,2C,gCCA1B,QAA0B,2C,gCCA1B,QAA0B,2C,6ECA1B,MAA0B,4CCA1B,MAA0B,4CCA1B,MAA0B,4CCA1B,MAA0B,4CCA1B,MAA0B,4CCA1B,MAA0B,4CCA1B,MAA0B,4CCA1B,MAA0B,4CCY5BoJ,EAAb,WACI,aAAgB,oBACZnL,KAAKmL,eAAiBnL,KAAKmL,eAAe1L,KAAKO,MAE/CA,KAAKmU,aAAe,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAK,EAAG,GACrD,CAAC,EAAG,GAAK,GAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAK,EAAG,IACjD,CAAC,EAAG,EAAG,GAAK,EAAG,GAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAC/C,CAAC,EAAG,EAAG,EAAG,GAAK,GAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAC/C,CAAC,EAAG,GAAK,EAAG,EAAG,GAAK,EAAG,EAAG,GAAK,EAAG,GAAK,EAAG,GAAK,EAAG,EAAG,IACrD,CAAC,EAAG,EAAG,GAAK,EAAG,EAAG,GAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC/C,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAK,EAAG,GAAK,GAAK,GAAK,EAAG,EAAG,GACnD,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAK,GAAK,EAAG,EAAG,EAAG,GAAK,GAAK,GACnD,CAAC,EAAG,EAAG,EAAG,EAAG,GAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAK,EAAG,EAAG,GAC/C,CAAC,EAAG,EAAG,EAAG,GAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAK,EAAG,GAC/C,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAK,EAAG,EAAG,EAAG,GAC7C,CAAC,EAAG,GAAK,EAAG,EAAG,EAAG,EAAG,GAAK,EAAG,EAAG,GAAK,EAAG,EAAG,EAAG,GAAK,GACnD,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAK,EAAG,GAAK,EAAG,EAAG,EAAG,EAAG,EAAG,GAC/C,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC3C,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAExDnU,KAAKoU,gBAAkB,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAK,EAAG,EAAG,EAAG,IAC3D,CAAC,EAAG,GAAK,GAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAK,EAAG,GAAK,EAAG,GACzD,CAAC,EAAG,EAAG,GAAK,EAAG,GAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAK,EAAG,GACvD,CAAC,EAAG,EAAG,EAAG,GAAK,GAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAK,EAAG,GACvD,CAAC,EAAG,GAAK,EAAG,EAAG,GAAK,EAAG,EAAG,GAAK,EAAG,GAAK,EAAG,GAAK,EAAG,EAAG,GAAK,EAAG,IAC7D,CAAC,EAAG,GAAK,GAAK,EAAG,EAAG,GAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IACvD,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAK,EAAG,GAAK,GAAK,GAAK,EAAG,EAAG,EAAG,EAAG,GACzD,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAK,GAAK,EAAG,EAAG,EAAG,GAAK,GAAK,EAAG,EAAG,GACzD,CAAC,EAAG,EAAG,EAAG,EAAG,GAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAK,EAAG,EAAG,EAAG,EAAG,GACrD,CAAC,EAAG,EAAG,EAAG,GAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAK,EAAG,EAAG,EAAG,IACrD,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IACnD,CAAC,EAAG,GAAK,EAAG,EAAG,EAAG,EAAG,GAAK,GAAK,EAAG,GAAK,EAAG,EAAG,EAAG,GAAK,EAAG,EAAG,IAC3D,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAK,EAAG,GAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IACrD,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAK,IACnD,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IACjD,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAK,IACrD,CAAC,EAAG,GAAK,GAAK,GAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,KAEvEpU,KAAKqU,gBAAkB,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAK,EAAG,EAAG,EAAG,GAAK,GAChE,CAAC,EAAG,GAAK,GAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAK,EAAG,GAAK,EAAG,EAAG,GAC5D,CAAC,EAAG,EAAG,GAAK,EAAG,GAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAK,EAAG,EAAG,GAC1D,CAAC,EAAG,EAAG,EAAG,GAAK,GAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAK,EAAG,EAAG,GAC1D,CAAC,EAAG,GAAK,EAAG,EAAG,GAAK,EAAG,EAAG,GAAK,EAAG,GAAK,EAAG,GAAK,EAAG,EAAG,GAAK,EAAG,GAAK,GAClE,CAAC,EAAG,GAAK,GAAK,EAAG,EAAG,GAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAK,GAC5D,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAK,EAAG,GAAK,GAAK,GAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAC5D,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAK,GAAK,EAAG,EAAG,EAAG,GAAK,GAAK,EAAG,EAAG,EAAG,GAC5D,CAAC,EAAG,EAAG,EAAG,EAAG,GAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAK,EAAG,EAAG,EAAG,EAAG,EAAG,GACxD,CAAC,EAAG,EAAG,EAAG,GAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAK,EAAG,EAAG,EAAG,GAAK,GAC1D,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAK,EAAG,EAAG,EAAG,EAAG,EAAG,GAAK,GACxD,CAAC,EAAG,GAAK,EAAG,EAAG,EAAG,EAAG,GAAK,GAAK,EAAG,GAAK,EAAG,EAAG,EAAG,GAAK,EAAG,EAAG,GAAK,IAChE,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAK,EAAG,GAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAK,GAC1D,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAK,EAAG,GACtD,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAK,GACtD,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAK,EAAG,IACxD,CAAC,EAAG,GAAK,GAAK,GAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAK,GAC5D,CAAC,EAAG,GAAK,EAAG,EAAG,EAAG,EAAG,EAAG,GAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAK,IAG1ErU,KAAKsU,gBAAkB,CACnB,OAAU,EACV,KAAQ,EACR,MAAS,EACT,SAAY,EACZ,MAAS,EACT,IAAO,EACP,SAAY,EACZ,OAAU,EACV,OAAU,EACV,OAAU,EACV,QAAW,GACX,IAAO,GACP,KAAQ,GACR,MAAS,GACT,OAAU,GACV,KAAQ,GACR,MAAS,GACT,MAAS,IAGbtU,KAAKuU,eAAiB,CAACvU,KAAKsU,gBAAgBE,OAAQxU,KAAKsU,gBAAgBG,SACrEzU,KAAKsU,gBAAgBI,OAAQ1U,KAAKsU,gBAAgBK,OAAQ3U,KAAKsU,gBAAgBM,OAC/E5U,KAAKsU,gBAAgBO,KAAM7U,KAAKsU,gBAAgBQ,IAAK9U,KAAKsU,gBAAgBS,MAAO/U,KAAKsU,gBAAgBU,OAE1GhV,KAAKiV,cAAgB,CAACjV,KAAKsU,gBAAgBY,KAAMlV,KAAKsU,gBAAgBa,MAClEnV,KAAKsU,gBAAgBc,MAAOpV,KAAKsU,gBAAgBe,SAAUrV,KAAKsU,gBAAgBgB,QAChFtV,KAAKsU,gBAAgBiB,IAAKvV,KAAKsU,gBAAgBkB,OAAQxV,KAAKsU,gBAAgBmB,KAAMzV,KAAKsU,gBAAgBoB,OAE3G1V,KAAKoL,cAAgB,CAC1B,MAAS,EACA,iBAAkB,EAClB,KAAQ,EACR,UAAa,EACb,KAAQ,EACR,eAAgB,EAChB,IAAO,EACP,eAAgB,EACzB,2BAA4B,EAC5B,aAAc,IAGTpL,KAAK2V,cAAgB,CACjBC,SAAU,EACVC,QAAS,GAtGrB,qDA2GI,SAAkBjP,GAAa,IACvBkP,EADsB,OAG1B,OAAOlP,GACH,KAAK,EACHkP,EAAWC,EACX,MACF,KAAK,EACDD,EAAWE,EACX,MACJ,KAAK,EACDF,EAAWG,EACX,MACJ,KAAK,EACDH,EAAWI,EACX,MACJ,KAAK,EACDJ,EAAWK,EACX,MACJ,KAAK,EACDL,EAAWM,EACX,MACJ,KAAK,EACDN,EAAWO,EACX,MACJ,KAAK,EACDP,EAAWQ,EACX,MACJ,QACI3S,QAAQC,IAAI,+BAAgCgD,GAGpD,OAAOrB,MAAMuQ,GAAUtQ,MAAK,SAAAC,GAAQ,OAAIA,EAAS8B,UAAQ/B,MAAK,SAAA+B,GAAI,OAAI,EAAKgP,iBAAiBhP,QA3IpG,8BA8II,SAAiBA,GAGb,IAAIiP,GADJjP,GAAa,IACQc,MAAM,MAO3B,OALAmO,EAAUjW,SAAQ,SAASkW,EAAMC,EAAO5T,GACpC,IAAI6T,EAAWF,EAAKpO,MAAM,MAC1BvF,EAAM4T,GAAS,CAAC,KAAQC,EAAS,GAAGrR,cAAcsR,QAAQ,IAAI,KAAM,KAAQD,EAAS,GAAI,SAAYA,EAAS,GAAI,MAASA,EAAS,OAGjIH,IAxJf,mEA2LI,WAAqBK,EAAYC,EAAYlQ,EAAYmQ,GAAzD,0BAAAjK,EAAA,6DAEQkK,EAAc,GAFtB,SAGyBhX,KAAKiX,kBAAkBrQ,GAHhD,cAGQsQ,EAHR,OAKIL,EAAW/T,MAAMvC,SAAQ,SAAA+M,GACrB,IAAI,IAAI3G,EAAE,EAAEA,EAAEuQ,EAASxQ,OAAOC,IAC1B,GAAIuQ,EAASvQ,GAAGwQ,OAAS7J,EAAKA,KAAK5M,KAAK,CACpC,IAAI0W,EAAS,EAAKC,gBAAgBH,EAASvQ,GAAIkQ,EAAYC,EAAYlQ,EAAYmQ,GACnFC,EAAYvW,KAAK,CAAC6M,KAAM4J,EAASvQ,GAAGwQ,KAAMhK,UAAW+J,EAASvQ,GAAG9B,KAAM0I,QAAS6J,EAAOE,WAAY9J,QAAS4J,EAAOG,iBAM3HC,EAAkBR,EAAYS,MAAK,SAAC3K,EAAE4K,GAAH,OAAUA,EAAElK,QAAQV,EAAEU,WAfjE,kBAgBWgK,GAhBX,gDA3LJ,oFA+MI,SAAUrX,GAON,OAJIA,EAFWA,EAAQyS,KAAKC,MAAM1S,GACnB,GACHyS,KAAK+E,KAAKxX,GAEVyS,KAAKC,MAAM1S,KApN/B,6BA0NI,SAAgBmN,EAAMuJ,EAAYC,EAAYlQ,EAAYmQ,GAItD,IAAIa,EAAc,EAIdC,EAAW,EACXC,EAAW,EACXC,EAAW,EAKXR,EAAa,EACbD,EAAa,EAEjB,GAAsB,SAAlBhK,EAAK0K,UAAyC,WAAlB1K,EAAK0K,SACjC,MAAO,CAACV,aAAYC,cA8ExB,GAAmB,IAAf3Q,EAAiB,CACjB,IAOIqR,EAPAtV,EAAQkU,EAAWlU,MACnBuV,EAAQ5K,EAAK4K,MAGbpL,EAAI,EACJqL,EAAI,EAIJnY,KAAKuU,eAAe6D,QAAQpY,KAAKsU,gBAAgBhH,EAAKzI,QAAU,GAChEiI,EAAI+J,EAAWnU,WAAWP,IAC1BgW,EAAIrB,EAAWpU,WAAWL,IAC1B4V,GAAa,IAEbnL,EAAI+J,EAAWnU,WAAWN,MAC1B+V,EAAIrB,EAAWpU,WAAWJ,MAC1B2V,GAAa,GAKblB,EAAW9K,UAAYjM,KAAKoL,cAAc,mBAAmC,SAAdkC,EAAKzI,OACpE+S,EAAc,KAEdb,EAAW9K,UAAYjM,KAAKoL,cAAL,MAA4C,UAAdkC,EAAKzI,OAC1D+S,EAAc,KAEdb,EAAW9K,UAAYjM,KAAKoL,cAAc,mBAAmC,UAAdkC,EAAKzI,OACpE+S,EAAc,IAEdb,EAAW9K,UAAYjM,KAAKoL,cAAL,MAA4C,SAAdkC,EAAKzI,OAC1D+S,EAAc,IAYlB,IAAK,IAAIjR,EAAI,EAAGA,EAAIkQ,EAAW9T,MAAM2D,OAAQC,IACzC,GAAI2G,EAAKzI,OAASgS,EAAW9T,MAAM4D,GAAI,CACnCkR,EAAW,IACX,MAKRC,EAAW9X,KAAKoU,gBAAgBpU,KAAKsU,gBAAgBhH,EAAKzI,OAAO7E,KAAKsU,gBAAgBwC,EAAW/T,MAAM,KACvG+U,QAAoC5P,IAAxB4O,EAAW/T,MAAM,GAAmB,EAAI/C,KAAKoU,gBAAgBpU,KAAKsU,gBAAgBhH,EAAKzI,OAAO7E,KAAKsU,gBAAgBwC,EAAW/T,MAAM,KAEtH,SAAtB8T,EAAWhU,SACXkV,EAAW,IAGf,IAAIM,EAAazF,KAAKC,MAAMD,KAAKC,MAAOD,KAAKC,MAAM,EAAIlQ,EAAQ,EAAI,GAAKuV,EAAQpL,EAAKqL,GAAK,IACtFF,IACAI,EAAazF,KAAKC,MAAMwF,EAAaN,IAEzCM,EAAazF,KAAKC,MAAMwF,EAAaT,GACrCS,GAAc,EACdA,EAAazF,KAAKC,MAAMwF,EAAaR,GACrCQ,EAAazF,KAAKC,MAAMwF,EAAaP,GACrCR,EAAa1E,KAAKC,MAAmB,IAAbwF,GACxBd,EAAac,EAGjB,GAAmB,IAAfzR,EAAiB,CAQjB,IANA,IAAIjE,EAAQkU,EAAWlU,MACnBuV,EAAQ5K,EAAK4K,MAKRvR,EAAI,EAAGA,EAAIkQ,EAAW9T,MAAM2D,OAAQC,IACzC,GAAI2G,EAAKzI,OAASgS,EAAW9T,MAAM4D,GAAI,CACnCkR,EAAW,IACX,MAIRC,EAAW9X,KAAKoU,gBAAgBpU,KAAKsU,gBAAgBhH,EAAKzI,OAAO7E,KAAKsU,gBAAgBwC,EAAW/T,MAAM,KACvG+U,QAAoC5P,IAAxB4O,EAAW/T,MAAM,GAAmB,EAAI/C,KAAKoU,gBAAgBpU,KAAKsU,gBAAgBhH,EAAKzI,OAAO7E,KAAKsU,gBAAgBwC,EAAW/T,MAAM,KAEhJ,IAGIkV,EAHAnL,EAAI,EACJqL,EAAI,EAIc,aAAlB7K,EAAK0K,UACLlL,EAAI+J,EAAWnU,WAAWP,IAC1BgW,EAAIrB,EAAWpU,WAAWL,IAC1B4V,GAAa,IAEbnL,EAAI+J,EAAWnU,WAAWN,MAC1B+V,EAAIrB,EAAWpU,WAAWJ,MAC1B2V,GAAa,GAIblB,EAAW9K,UAAYjM,KAAKoL,cAAc,mBAAmC,SAAdkC,EAAKzI,OACpE+S,EAAc,KAEdb,EAAW9K,UAAYjM,KAAKoL,cAAL,MAA4C,UAAdkC,EAAKzI,OAC1D+S,EAAc,KAEdb,EAAW9K,UAAYjM,KAAKoL,cAAc,mBAAmC,UAAdkC,EAAKzI,OACpE+S,EAAc,IAEdb,EAAW9K,UAAYjM,KAAKoL,cAAL,MAA4C,SAAdkC,EAAKzI,OAC1D+S,EAAc,IAGQ,SAAtBf,EAAWhU,QAAqBoV,IAChCF,EAAW,IAGf,IAAIO,EAAOP,EAAWH,EAElBS,EAAczF,KAAKC,MAAMD,KAAKC,MAAMD,KAAKC,MAAMD,KAAKC,OAAOD,KAAKC,MAAY,EAANlQ,EAAQ,GAAK,GAAKuV,EAAQpL,GAAK,IAAMqL,GAAKG,GAAQ,EAC5HhB,EAAa1E,KAAKC,MAAmB,IAAbwF,GACxBd,EAAac,EACbf,EAAa1E,KAAKC,MAAMyE,EAAaO,GACrCN,EAAa3E,KAAKC,MAAM0E,EAAaM,GACrCP,EAAa1E,KAAKC,MAAMyE,EAAaQ,GACrCP,EAAa3E,KAAKC,MAAM0E,EAAaO,GAGzC,GAAmB,IAAflR,EAAiB,CAKjB,IAHA,IAAIjE,EAAQkU,EAAWlU,MACnBuV,EAAQ5K,EAAK4K,MAERvR,EAAI,EAAGA,EAAIkQ,EAAW9T,MAAM2D,OAAQC,IACzC,GAAI2G,EAAKzI,OAASgS,EAAW9T,MAAM4D,GAAI,CACnCkR,EAAW,IACX,MAIR,IAGII,EAHAnL,EAAI,EACJqL,EAAI,EAIc,aAAlB7K,EAAK0K,UACLlL,EAAI+J,EAAWnU,WAAWP,IAC1BgW,EAAIrB,EAAWpU,WAAWL,IAC1B4V,GAAa,IAEbnL,EAAI+J,EAAWnU,WAAWN,MAC1B+V,EAAIrB,EAAWpU,WAAWJ,MAC1B2V,GAAa,GAEjBH,EAAW9X,KAAKoU,gBAAgBpU,KAAKsU,gBAAgBhH,EAAKzI,OAAO7E,KAAKsU,gBAAgBwC,EAAW/T,MAAM,KACvG+U,QAAoC5P,IAAxB4O,EAAW/T,MAAM,GAAmB,EAAI/C,KAAKoU,gBAAgBpU,KAAKsU,gBAAgBhH,EAAKzI,OAAO7E,KAAKsU,gBAAgBwC,EAAW/T,MAAM,KAG5IgU,EAAW9K,UAAYjM,KAAKoL,cAAc,mBAAmC,SAAdkC,EAAKzI,OACpE+S,EAAc,KAEdb,EAAW9K,UAAYjM,KAAKoL,cAAL,MAA4C,UAAdkC,EAAKzI,OAC1D+S,EAAc,KAEdb,EAAW9K,UAAYjM,KAAKoL,cAAc,mBAAmC,UAAdkC,EAAKzI,OACpE+S,EAAc,IAEdb,EAAW9K,UAAYjM,KAAKoL,cAAL,MAA4C,SAAdkC,EAAKzI,OAC1D+S,EAAc,IAGQ,SAAtBf,EAAWhU,QAAqBoV,IAChCF,EAAW,IAGf,IAAIM,EAAazF,KAAKC,MAAMD,KAAKC,MAAMD,KAAKC,MAAM,EAAElQ,EAAM,EAAI,GAAGuV,EAAMpL,EAAEqL,GAAG,IAAM,EAClFE,GAAcT,EACdS,EAAarY,KAAKuY,UAAUF,GAC5Bf,EAAa1E,KAAKC,MAAmB,IAAbwF,GACxBd,EAAac,EACbf,GAAcO,EACdP,EAAatX,KAAKuY,UAAUjB,GAC5BC,GAAcM,EACdN,EAAavX,KAAKuY,UAAUhB,GAC5BD,GAAcQ,EACdR,EAAatX,KAAKuY,UAAUjB,GAC5BC,GAAcO,EACdP,EAAavX,KAAKuY,UAAUhB,GAC5BD,GAAcS,EACdT,EAAatX,KAAKuY,UAAUjB,GAC5BC,GAAcQ,EACdR,EAAavX,KAAKuY,UAAUhB,GAGhC,GAAmB,IAAf3Q,EAAiB,CAKjB,IAHA,IAAIjE,EAAQkU,EAAWlU,MACnBuV,EAAQ5K,EAAK4K,MAERvR,EAAI,EAAGA,EAAIkQ,EAAW9T,MAAM2D,OAAQC,IACzC,GAAI2G,EAAKzI,OAASgS,EAAW9T,MAAM4D,GAAI,CACnCkR,EAAW,IACX,MAIR,IAGII,EAHAnL,EAAI,EACJqL,EAAI,EAIc,aAAlB7K,EAAK0K,UACLlL,EAAI+J,EAAWnU,WAAWP,IAC1BgW,EAAIrB,EAAWpU,WAAWL,IAC1B4V,GAAa,IAEbnL,EAAI+J,EAAWnU,WAAWN,MAC1B+V,EAAIrB,EAAWpU,WAAWJ,MAC1B2V,GAAa,GAEjBH,EAAW9X,KAAKoU,gBAAgBpU,KAAKsU,gBAAgBhH,EAAKzI,OAAO7E,KAAKsU,gBAAgBwC,EAAW/T,MAAM,KACvG+U,QAAoC5P,IAAxB4O,EAAW/T,MAAM,GAAmB,EAAI/C,KAAKoU,gBAAgBpU,KAAKsU,gBAAgBhH,EAAKzI,OAAO7E,KAAKsU,gBAAgBwC,EAAW/T,MAAM,MAG3IgU,EAAW9K,UAAYjM,KAAKoL,cAAc,mBAAmC,SAAdkC,EAAKzI,MACpEkS,EAAW9K,UAAYjM,KAAKoL,cAAc,6BAA6C,SAAdkC,EAAKzI,QAC/E+S,EAAc,MAEbb,EAAW9K,UAAYjM,KAAKoL,cAAL,MAA4C,UAAdkC,EAAKzI,MAC1DkS,EAAW9K,UAAYjM,KAAKoL,cAAc,eAA+B,UAAdkC,EAAKzI,QACjE+S,EAAc,MAEbb,EAAW9K,UAAYjM,KAAKoL,cAAc,mBAAmC,UAAdkC,EAAKzI,MACpEkS,EAAW9K,UAAYjM,KAAKoL,cAAc,6BAA6C,UAAdkC,EAAKzI,QAC/E+S,EAAc,KAEbb,EAAW9K,UAAYjM,KAAKoL,cAAL,MAA4C,SAAdkC,EAAKzI,MAC1DkS,EAAW9K,UAAYjM,KAAKoL,cAAc,eAA+B,SAAdkC,EAAKzI,QACjE+S,EAAc,IAGQ,SAAtBf,EAAWhU,QAAqBoV,IAChCF,EAAW,IAGf,IAAIM,EAAazF,KAAKC,MAAMD,KAAKC,MAAMD,KAAKC,MAAM,EAAElQ,EAAM,EAAI,GAAGuV,EAAMpL,EAAEqL,GAAG,IAAM,EAClFE,GAAcT,EACdS,EAAarY,KAAKuY,UAAUF,GAC5Bf,EAAa1E,KAAKC,MAAmB,IAAbwF,GACxBd,EAAac,EACbf,GAAcO,EACdP,EAAatX,KAAKuY,UAAUjB,GAC5BC,GAAcM,EACdN,EAAavX,KAAKuY,UAAUhB,GAC5BD,GAAcQ,EACdR,EAAatX,KAAKuY,UAAUjB,GAC5BC,GAAcO,EACdP,EAAavX,KAAKuY,UAAUhB,GAC5BD,GAAcS,EACdT,EAAatX,KAAKuY,UAAUjB,GAC5BC,GAAcQ,EACdR,EAAavX,KAAKuY,UAAUhB,GAGhC,GAAmB,IAAf3Q,EAAiB,CAEjB,IAAIjE,EAAQkU,EAAWlU,MACnBuV,EAAQ5K,EAAK4K,MAEU,IAAvBnB,EAAWnK,SAA+B,aAAdU,EAAKzI,MAGH,IAAvBkS,EAAWnK,SAA+B,UAAdU,EAAKzI,MAFxCqT,GAAS,IACTA,EAAQlY,KAAKuY,UAAUL,IAIO,IAAvBnB,EAAWnK,SAA+B,WAAdU,EAAKzI,MACxCqT,GAAS,GACTA,EAAQlY,KAAKuY,UAAUL,IACO,IAAvBnB,EAAWnK,SAA+B,YAAdU,EAAKzI,OACxCqT,GAAS,IACTA,EAAQlY,KAAKuY,UAAUL,IAG3B,IAAK,IAAIvR,EAAI,EAAGA,EAAIkQ,EAAW9T,MAAM2D,OAAQC,IACzC,GAAI2G,EAAKzI,OAASgS,EAAW9T,MAAM4D,GAAI,CACnCkR,EAAW,IACX,MAIR,IAGII,EAHAnL,EAAI,EACJqL,EAAI,EAIc,aAAlB7K,EAAK0K,UACLlL,EAAI+J,EAAWnU,WAAWP,IAC1BgW,EAAIrB,EAAWpU,WAAWL,IAC1B4V,GAAa,IAEbnL,EAAI+J,EAAWnU,WAAWN,MAC1B+V,EAAIrB,EAAWpU,WAAWJ,MAC1B2V,GAAa,GAEjBH,EAAW9X,KAAKoU,gBAAgBpU,KAAKsU,gBAAgBhH,EAAKzI,OAAO7E,KAAKsU,gBAAgBwC,EAAW/T,MAAM,KACvG+U,QAAoC5P,IAAxB4O,EAAW/T,MAAM,GAAmB,EAAI/C,KAAKoU,gBAAgBpU,KAAKsU,gBAAgBhH,EAAKzI,OAAO7E,KAAKsU,gBAAgBwC,EAAW/T,MAAM,MAG3IgU,EAAW9K,UAAYjM,KAAKoL,cAAc,mBAAmC,SAAdkC,EAAKzI,MACpEkS,EAAW9K,UAAYjM,KAAKoL,cAAc,6BAA6C,SAAdkC,EAAKzI,QAC/E+S,EAAc,MAEbb,EAAW9K,UAAYjM,KAAKoL,cAAL,MAA4C,UAAdkC,EAAKzI,MAC1DkS,EAAW9K,UAAYjM,KAAKoL,cAAc,eAA+B,UAAdkC,EAAKzI,QACjE+S,EAAc,MAEbb,EAAW9K,UAAYjM,KAAKoL,cAAc,mBAAmC,UAAdkC,EAAKzI,MACpEkS,EAAW9K,UAAYjM,KAAKoL,cAAc,6BAA6C,UAAdkC,EAAKzI,QAC/E+S,EAAc,KAEbb,EAAW9K,UAAYjM,KAAKoL,cAAL,MAA4C,SAAdkC,EAAKzI,MAC1DkS,EAAW9K,UAAYjM,KAAKoL,cAAc,eAA+B,SAAdkC,EAAKzI,QACjE+S,EAAc,IAGQ,SAAtBf,EAAWhU,QAAqBoV,IAChCF,EAAW,IAGf,IAAIM,EAAazF,KAAKC,MAAMD,KAAKC,MAAMD,KAAKC,MAAM,EAAElQ,EAAM,EAAI,GAAGuV,EAAMpL,EAAEqL,GAAG,IAAM,EAClFE,GAAcT,EACdS,EAAarY,KAAKuY,UAAUF,GAC5Bf,EAAa1E,KAAKC,MAAmB,IAAbwF,GACxBd,EAAac,EACbf,GAAcO,EACdP,EAAatX,KAAKuY,UAAUjB,GAC5BC,GAAcM,EACdN,EAAavX,KAAKuY,UAAUhB,GAC5BD,GAAcQ,EACdR,EAAatX,KAAKuY,UAAUjB,GAC5BC,GAAcO,EACdP,EAAavX,KAAKuY,UAAUhB,GAC5BD,GAAcS,EACdT,EAAatX,KAAKuY,UAAUjB,GAC5BC,GAAcQ,EACdR,EAAavX,KAAKuY,UAAUhB,GA+BhC,MAAO,CAACD,aAAYC,kBAxrB5B,KA4rBepM,O,8ICxrBAqN,MAZf,WACE,OACE,qBAAKrQ,UAAU,MAAf,SACE,cAAC,IAAD,UACI,cAAC,IAAD,UACE,cAAC,IAAD,CAAOsQ,OAAK,EAACC,KAAO,IAAIC,UAAapO,aCGlCqO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBtT,MAAK,YAAkD,IAA/CuT,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.a10eb0c0.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport class Dropdown extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\t\tthis.onOptionChange = this.onOptionChange.bind(this);\r\n\t\tthis.getOptionList = this.getOptionList.bind(this);\r\n\r\n        this.state = {\r\n            uid: \"\",\r\n            option: (props.initial || \"\")\r\n        };\r\n    }\r\n\r\n    onOptionChange(event) {\r\n        this.setState({\r\n            option: event.target.value\r\n        });\r\n        this.props.getOption(event.target.value);\r\n    }\r\n\r\n    getOptionList(names) {\r\n        let optionsList = [];\r\n        names.forEach(element => (\r\n            optionsList.push(\r\n                <option name={element} key={element}>{element}</option>\r\n            )\r\n        ));\r\n        return optionsList;\r\n    }\r\n\r\n    /*shouldComponentUpdate() {\r\n        return (this.state.gen)\r\n    }*/\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            optionsList: this.getOptionList(this.props.names)\r\n        })\r\n    }\r\n\r\n    render() {\r\n        let optionsList = this.state.optionsList;\r\n\r\n        return (\r\n            <select value={this.state.option} onChange={this.onOptionChange}>\r\n                {optionsList}\r\n            </select>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Dropdown;","import React from 'react';\r\nimport Dropdown from './Dropdown.jsx';\r\nimport StatCalculator from './StatCalculator.js';\r\nimport pokedexGen1 from './pokedex_gen_1.txt';\r\nimport pokedexGen2 from './pokedex_gen_2.txt';\r\nimport pokedexGen3 from './pokedex_gen_3.txt';\r\nimport pokedexGen4 from './pokedex_gen_4.txt';\r\nimport pokedexGen5 from './pokedex_gen_5.txt';\r\nimport pokedexGen6 from './pokedex_gen_6.txt';\r\nimport pokedexGen7 from './pokedex_gen_7.txt';\r\nimport pokedexGen8 from './pokedex_gen_8.txt';\r\nimport './global.js';\r\nimport firebase from 'firebase';\r\n\r\n\r\nexport class Pokemon extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\t\tthis.retrievePkmnFromList = this.retrievePkmnFromList.bind(this);\r\n\t\tthis.updatePkmnInfo = this.updatePkmnInfo.bind(this);\r\n\t\tthis.retrievePkmnInfo = this.retrievePkmnInfo.bind(this);\r\n\t\tthis.updatePkmnEV = this.updatePkmnEV.bind(this);\r\n\t\tthis.updatePkmnIV = this.updatePkmnIV.bind(this);\r\n\t\tthis.updatePkmnLevel = this.updatePkmnLevel.bind(this);\r\n\t\tthis.retrieveNatureFromList = this.retrieveNatureFromList.bind(this);\r\n\t\tthis.retrieveStatusFromList = this.retrieveStatusFromList.bind(this);\r\n\t\tthis.getTypeColor = this.getTypeColor.bind(this);\r\n\t\tthis.savePokemon = this.savePokemon.bind(this);\r\n\t\tthis.loadPokemon = this.loadPokemon.bind(this);\r\n\t\tthis.setSavedPokemon = this.setSavedPokemon.bind(this);\r\n\t\tthis.getSavedPokemon = this.getSavedPokemon.bind(this);\r\n\r\n\t\tthis.natureList = [\"Hardy\", \"Lonely\", \"Brave\", \"Adamant\", \"Naughty\", \"Bold\", \"Docile\", \r\n\t\t\t\"Relaxed\", \"Impish\", \"Lax\", \"Timid\", \"Hasty\", \"Serious\", \"Jolly\", \"Naive\", \"Modest\", \r\n\t\t\t\"Mild\", \"Quiet\", \"Bashful\", \"Rash\", \"Calm\", \"Gentle\", \"Sassy\", \"Careful\", \"Quirky\"];\r\n\t\t\r\n\t\tthis.statusList = [\"Healthy\",\"Badly Poisoned\",\"Burn\",\"Freeze\",\"Paralysis\",\"Poisoned\",\"Sleep\"];\r\n\r\n\t\tthis.statCalculator = new StatCalculator();\r\n\r\n        this.state = {\r\n            uid: \"\",\r\n\t\t\tcurPkmn: \"Bulbasaur\",\r\n\t\t\tbaseStats: {\t\t\t\r\n\t\t\t\tHP: 0,\r\n\t\t\t\tAtk: 0,\r\n\t\t\t\tSpAtk: 0,\r\n\t\t\t\tDef: 0,\r\n\t\t\t\tSpDef: 0,\r\n\t\t\t\tSpd: 0\r\n\t\t\t},\r\n\t\t\tivInfo: {\t\t\t\r\n\t\t\t\tHP: 0,\r\n\t\t\t\tAtk: 0,\r\n\t\t\t\tSpAtk: 0,\r\n\t\t\t\tDef: 0,\r\n\t\t\t\tSpDef: 0,\r\n\t\t\t\tSpd: 0\r\n\t\t\t},\r\n\t\t\tevInfo: {\t\t\t\r\n\t\t\t\tHP: 0,\r\n\t\t\t\tAtk: 0,\r\n\t\t\t\tSpAtk: 0,\r\n\t\t\t\tDef: 0,\r\n\t\t\t\tSpDef: 0,\r\n\t\t\t\tSpd: 0\r\n\t\t\t},\r\n\t\t\ttotalStats: {\t\t\t\r\n\t\t\t\tHP: 0,\r\n\t\t\t\tAtk: 0,\r\n\t\t\t\tSpAtk: 0,\r\n\t\t\t\tDef: 0,\r\n\t\t\t\tSpDef: 0,\r\n\t\t\t\tSpd: 0\r\n\t\t\t},\r\n\t\t\tlevel: 1,\r\n\t\t\tnature: \"Hardy\",\r\n\t\t\tstatus: \"Healthy\",\r\n\t\t\tmoves: [],\r\n\t\t\ttypes: [],\r\n\t\t\tpkmnImg: \"\",\r\n\t\t\tpokemonList: [],\r\n\t\t\tisAdvanced: true,\r\n\t\t\treadySwap: false,\r\n\t\t\tsavedName: \"Insert Name\",\r\n\t\t\tdisplay : false,\r\n\t\t\tnameList: [],\r\n\t\t\tpkmnList: [],\r\n        };\r\n\t}\r\n\r\n\tsavePokemon() {\r\n\t\tif (this.state.uid !== \"\") {\r\n\t\t\tfirebase.database().ref('users/' + this.state.uid + '/preference').push(this.state)\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\tgetSavedPokemon() {\r\n\t\tconsole.log(\"get saved\")\r\n\t\tconsole.log(this.state.uid)\r\n\t\tlet nmList = [];\r\n\t\tlet prefList = {};\r\n\t\tif (this.state.uid !== \"\") {\r\n\t\t\tfirebase.database().ref('users/' + this.state.uid + '/preference').on(\"value\", snapshot => {\r\n\t\t\t\tprefList = {};\r\n\t\t\t\tconsole.log(snapshot.val())\r\n\t\t\t\tlet data = snapshot.val() ? snapshot.val() : {};\r\n\t\t\t\tprefList = { ...data }\r\n\t\t\t\tlet pkmnKeys = Object.keys(prefList);\r\n\t\t\t\tpkmnKeys.map((key) => {\r\n\t\t\t\t\tnmList.push( prefList[key].curPkmn)\r\n\t\t\t\t});\r\n\t\t\t\tconsole.log(nmList)\r\n\t\t\t});\r\n\t\t\tthis.setState({\r\n\t\t\t\tnameList: nmList,\r\n\t\t\t\tpkmnList: prefList\r\n\t\t\t});\r\n\t\t\tconsole.log(\"pkm\")\r\n\t\t\tconsole.log(this.state.nameList)\r\n\t\t\tconsole.log(this.state.pkmnList)\r\n\t\t\treturn nmList;\r\n\t\t};\r\n\t\treturn [\"Abra\"];\r\n\t}\r\n\r\n\t//need to style.\r\n\tloadPokemon() {\r\n\t\tthis.getSavedPokemon()\r\n\t\tthis.setState({\r\n\t\t\tdisplay: true,\r\n\t\t\tnameList: this.getSavedPokemon()\r\n\t\t})\r\n\t}\r\n\r\n\tsetSavedPokemon(selectedPokemon) {\r\n\t\tlet pkm = null;\r\n\t\tlet pkmnKeys = Object.keys(this.state.pkmnList);\r\n\t\tpkmnKeys.map((key) => \r\n\t\t{\r\n\t\t\tif(this.state.pkmnList[key].curPkmn === selectedPokemon){\r\n\t\t\t\tpkm = this.state.pkmnList[key];\r\n\t\t\t}\r\n\t\t}\r\n\t\t)\r\n\t\tif(this.props.loc === 0){\r\n\t\t\tglobal.pkmn1.setState({\r\n\t\t\t\tuid: pkm.uid,\r\n\t\t\t\tcurPkmn: pkm.curPkmn,\r\n\t\t\t\tbaseStats: pkm.baseStats,\r\n\t\t\t\tivInfo: pkm.ivInfo,\r\n\t\t\t\tevInfo: pkm.evInfo,\r\n\t\t\t\ttotalStats: pkm.totalStats,\r\n\t\t\t\tlevel: pkm.level,\r\n\t\t\t\tnature: pkm.nature,\r\n\t\t\t\tstatus: pkm.status,\r\n\t\t\t\tmoves: pkm.moves,\r\n\t\t\t\ttypes: pkm.types,\r\n\t\t\t\tpkmnImg: pkm.pkmnImg,\r\n\t\t\t\tisAdvanced: pkm.isAdvanced,\r\n\t\t\t\treadySwap: pkm.readySwap\r\n\t\t\t});\r\n\t\t}else{\r\n\t\t\tglobal.pkmn2.setState({\r\n\t\t\t\tuid: pkm.uid,\r\n\t\t\t\tcurPkmn: pkm.curPkmn,\r\n\t\t\t\tbaseStats: pkm.baseStats,\r\n\t\t\t\tivInfo: pkm.ivInfo,\r\n\t\t\t\tevInfo: pkm.evInfo,\r\n\t\t\t\ttotalStats: pkm.totalStats,\r\n\t\t\t\tlevel: pkm.level,\r\n\t\t\t\tnature: pkm.nature,\r\n\t\t\t\tstatus: pkm.status,\r\n\t\t\t\tmoves: pkm.moves,\r\n\t\t\t\ttypes: pkm.types,\r\n\t\t\t\tpkmnImg: pkm.pkmnImg,\r\n\t\t\t\tisAdvanced: pkm.isAdvanced,\r\n\t\t\t\treadySwap: pkm.readySwap\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tgetTypeColor(type) {\r\n\t\tswitch (type) {\r\n\t\t\tcase \"Fire\":\r\n\t\t\t\treturn \"#EE8130\";\r\n\t\t\tcase \"Water\":\r\n\t\t\t\treturn \"#6390F0\";\r\n\t\t\tcase \"Electric\":\r\n\t\t\t\treturn \"#F7D02C\";\r\n\t\t\tcase \"Grass\":\r\n\t\t\t\treturn \"#7AC74C\";\r\n\t\t\tcase \"Ice\":\r\n\t\t\t\treturn \"#96D9D6\";\r\n\t\t\tcase \"Fighting\":\r\n\t\t\t\treturn \"#C22E28\";\r\n\t\t\tcase \"Poison\":\r\n\t\t\t\treturn \"#A33EA1\";\r\n\t\t\tcase \"Ground\":\r\n\t\t\t\treturn \"#E2BF65\";\r\n\t\t\tcase \"Flying\":\r\n\t\t\t\treturn \"#A98FF3\";\r\n\t\t\tcase \"Psychic\":\r\n\t\t\t\treturn \"#F95587\";\r\n\t\t\tcase \"Bug\":\r\n\t\t\t\treturn \"#A6B91A\";\r\n\t\t\tcase \"Rock\":\r\n\t\t\t\treturn \"#B6A136\";\r\n\t\t\tcase \"Ghost\":\r\n\t\t\t\treturn \"#735797\";\r\n\t\t\tcase \"Dragon\":\r\n\t\t\t\treturn \"#6F35FC\";\r\n\t\t\tcase \"Dark\":\r\n\t\t\t\treturn \"#705746\";\r\n\t\t\tcase \"Steel\":\r\n\t\t\t\treturn \"#B7B7CE\";\r\n\t\t\tcase \"Fairy\":\r\n\t\t\t\treturn \"#D685AD\";\r\n\t\t\tdefault: //normal type\r\n\t\t\t\treturn \"#A8A77A\";\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.readPokemonFromFile();\r\n\t\tthis.retrievePkmnInfo(\"Bulbasaur\");\r\n\t\tif (typeof(global.pkmn1) === 'undefined') {\r\n\t\t\tglobal.pkmn1 = this;\r\n\t\t} else {\r\n\t\t\tglobal.pkmn2 = this;\r\n\t\t}\r\n\t\t//this.getSavedPokemon();\r\n\t}\r\n\r\n\t//Retrieve the nature from the nature list\r\n\tretrieveNatureFromList(selectedNature) {\r\n\t\tthis.setState({\r\n\t\t\tnature: selectedNature\r\n\t\t});\r\n\t\tthis.updateTotalStats(this.statCalculator.getStatTotals(this.state.baseStats, this.state.evInfo, this.state.ivInfo, this.state.level, selectedNature));\r\n\t}\r\n\r\n\t//Retrieve the status from the status list\r\n\tretrieveStatusFromList(selectedStatus) {\r\n\t\tthis.setState({\r\n\t\t\tstatus: selectedStatus\r\n\t\t});\r\n\t}\r\n\r\n\t//Callback function passed to Dropdown to retrieve pokemon selected from the list\r\n\tretrievePkmnFromList(selectedPkmn) {\r\n\t\tthis.setState({\r\n\t\t\tcurPkmn: selectedPkmn\r\n\t\t});\r\n\t\tthis.retrievePkmnInfo(selectedPkmn);\r\n\t}\r\n\r\n\t//Called after retrievePkmnFromList is called to update pokemon stats\r\n\tretrievePkmnInfo(pkmn) {\r\n\t\t//Call the PokeAPI here to update pokemon info\r\n\t\tlet pokemonName = pkmn.toLowerCase();\r\n        let url = \"https://pokeapi.co/api/v2/pokemon/\" + pokemonName;\r\n        fetch(url)\r\n        .then(response => response.json())\r\n        .then(pokemonInfo => pokemonInfo = this.updatePkmnInfo(pokemonInfo));\r\n\t}\r\n\r\n\tupdateTotalStats(newTotalStats) {\r\n\t\tthis.setState({\r\n\t\t\ttotalStats: newTotalStats\r\n\t\t});\r\n\r\n\t\tthis.props.getPkmnInfo(this.state);\r\n\t}\r\n\r\n\tupdatePkmnInfo(pkmnInfo) {\r\n\t\tlet stats = pkmnInfo.stats;\r\n\t\tlet newBaseStats = {\r\n\t\t\tHP: stats[0].base_stat,\r\n\t\t\tAtk: stats[1].base_stat,\r\n\t\t\tSpAtk: stats[3].base_stat,\r\n\t\t\tDef: stats[2].base_stat,\r\n\t\t\tSpDef: stats[4].base_stat,\r\n\t\t\tSpd: stats[5].base_stat,\r\n\t\t}\r\n\r\n\t\tlet newMoves = pkmnInfo.moves;\r\n\t\tlet newImg = pkmnInfo.sprites.front_default;\r\n\t\tlet newTypes = [];\r\n        let genNumber = global.curGeneration;\r\n\r\n        if (pkmnInfo.past_types.length === 1) {\r\n            if (genNumber === 1) {\r\n                for (let i = 0; i < pkmnInfo.past_types[0].types.length; i++) {\r\n                    newTypes.push(pkmnInfo.past_types[0].types[i].type.name);\r\n                }\r\n            } else if (genNumber >= 2 && genNumber <= 5 && pkmnInfo.past_types[0].generation.name === \"generation-v\") {\r\n                for (let i = 0; i < pkmnInfo.past_types[0].types.length; i++) {\r\n                    newTypes.push(pkmnInfo.past_types[0].types[i].type.name)\r\n                }\r\n            } else {\r\n                for (let i = 0; i < pkmnInfo.types.length; i++) {\r\n                    newTypes.push(pkmnInfo.types[i].type.name);\r\n                }\r\n            }\r\n        } else {\r\n            for (let i = 0; i < pkmnInfo.types.length; i++) {\r\n                newTypes.push(pkmnInfo.types[i].type.name);\r\n            }\r\n        }\r\n\r\n\t\tfor (let i = 0; i < newTypes.length; i++) {\r\n\t\t\tnewTypes[i] = newTypes[i].charAt(0).toUpperCase() + newTypes[i].slice(1)\r\n\t\t}\r\n\r\n\t\tthis.setState({\r\n\t\t\tbaseStats: newBaseStats,\r\n\t\t\tmoves: newMoves,\r\n\t\t\tpkmnImg: newImg,\r\n\t\t\ttypes: newTypes\r\n\t\t});\r\n\r\n\t\tthis.updateTotalStats(this.statCalculator.getStatTotals(newBaseStats, this.state.evInfo, this.state.ivInfo, this.state.level, this.state.nature));\r\n\t}\r\n\r\n\t//Updates the pokemons level, limit from 1-100\r\n\tupdatePkmnLevel(event) {\r\n\t\tlet nature = this.state.nature;\r\n\t\tlet ivInfo = this.state.ivInfo;\r\n\t\tlet baseStats = this.state.baseStats;\r\n\t\tlet evInfo = this.state.evInfo;\r\n\t\tlet tempLevel = parseInt(event.target.value);\r\n\t\tif (tempLevel >= 100) {\r\n\t\t\ttempLevel = 100;\r\n\t\t} else if (tempLevel <= 0) {\r\n\t\t\ttempLevel = 1;\r\n\t\t} else if (!tempLevel) {\r\n\t\t\ttempLevel = 1;\r\n\t\t}\r\n\r\n\t\tthis.setState({\r\n\t\t\tlevel: tempLevel\r\n\t\t});\r\n\r\n\t\tthis.updateTotalStats(this.statCalculator.getStatTotals(baseStats, evInfo, ivInfo, tempLevel, nature));\r\n\t}\r\n\r\n\t//Takes in event value as well as the stat it is to update PkmnEV value\r\n\t//Restricts EVs at 252 individually, with a minimum of 0. Then calls calculateStats\r\n\tupdatePkmnEV(event, statType) {\r\n\t\tlet level = this.state.level;\r\n\t\tlet nature = this.state.nature;\r\n\t\tlet ivInfo = this.state.ivInfo;\r\n\t\tlet baseStats = this.state.baseStats;\r\n\t\tlet tempEvInfo = this.state.evInfo;\r\n\t\t\r\n\t\tlet newStat = parseInt(event.target.value);\r\n\r\n\t\tif(newStat >= 252) {\r\n\t\t\tnewStat = 252;\r\n\t\t} else if (newStat < 0) {\r\n\t\t\tnewStat = 0;\r\n\t\t} else if (!newStat) {\r\n\t\t\tnewStat = 0;\r\n\t\t}\r\n\r\n\t\tif (statType === \"HP\") {\r\n\t\t\ttempEvInfo.HP = newStat;\r\n\t\t} else if (statType === \"Atk\") {\r\n\t\t\ttempEvInfo.Atk = newStat;\r\n\t\t} else if (statType === \"SpAtk\") {\r\n\t\t\ttempEvInfo.SpAtk = newStat;\r\n\t\t} else if (statType === \"Def\") {\r\n\t\t\ttempEvInfo.Def = newStat;\r\n\t\t} else if (statType === \"SpDef\") {\r\n\t\t\ttempEvInfo.SpDef = newStat;\r\n\t\t} else if (statType === \"Spd\") {\r\n\t\t\ttempEvInfo.Spd = newStat;\r\n\t\t}\r\n\r\n\t\tthis.setState({\r\n\t\t\tevInfo: tempEvInfo\r\n\t\t});\r\n\r\n\t\t//Call function to update Total stats\r\n\t\tthis.updateTotalStats(this.statCalculator.getStatTotals(baseStats, tempEvInfo, ivInfo, level, nature));\r\n\t}\r\n\r\n\t//Updates the Pokemon's IVs in state and calls calculateStats\r\n\tupdatePkmnIV(event, statType) {\r\n\r\n\t\tlet level = this.state.level;\r\n\t\tlet nature = this.state.nature;\r\n\t\tlet evInfo = this.state.evInfo;\r\n\t\tlet baseStats = this.state.baseStats;\r\n\t\tlet tempIvInfo = this.state.ivInfo;\r\n\t\t\r\n\t\tlet newStat = parseInt(event.target.value);\r\n\r\n\t\tif(newStat >= 31) {\r\n\t\t\tnewStat = 31;\r\n\t\t} else if (newStat < 0) {\r\n\t\t\tnewStat = 0;\r\n\t\t} else if (!newStat) {\r\n\t\t\tnewStat = 0;\r\n\t\t}\r\n\r\n\t\tif (statType === \"HP\") {\r\n\t\t\ttempIvInfo.HP = newStat;\r\n\t\t} else if (statType === \"Atk\") {\r\n\t\t\ttempIvInfo.Atk = newStat;\r\n\t\t} else if (statType === \"SpAtk\") {\r\n\t\t\ttempIvInfo.SpAtk = newStat;\r\n\t\t} else if (statType === \"Def\") {\r\n\t\t\ttempIvInfo.Def = newStat;\r\n\t\t} else if (statType === \"SpDef\") {\r\n\t\t\ttempIvInfo.SpDef = newStat;\r\n\t\t} else if (statType === \"Spd\") {\r\n\t\t\ttempIvInfo.Spd = newStat;\r\n\t\t}\r\n\r\n\t\tthis.setState({\r\n\t\t\tivInfo: tempIvInfo\r\n\t\t});\r\n\r\n\t\t//Call function to update Total stats\r\n\t\tthis.updateTotalStats(this.statCalculator.getStatTotals(baseStats, evInfo, tempIvInfo, level, nature));\r\n\t}\r\n\r\n\t\t//May have to change to George's CSV file with all pokemon later\r\n    readPokemonFromFile() {\r\n        fetch(pokedexGen1).then(response => response.text()).then(text => this.getPokemonHelper(text, 1));\r\n\t\tfetch(pokedexGen2).then(response => response.text()).then(text => this.getPokemonHelper(text, 2));\r\n\t\tfetch(pokedexGen3).then(response => response.text()).then(text => this.getPokemonHelper(text, 3));\r\n\t\tfetch(pokedexGen4).then(response => response.text()).then(text => this.getPokemonHelper(text, 4));\r\n\t\tfetch(pokedexGen5).then(response => response.text()).then(text => this.getPokemonHelper(text, 5));\r\n\t\tfetch(pokedexGen6).then(response => response.text()).then(text => this.getPokemonHelper(text, 6));\r\n\t\tfetch(pokedexGen7).then(response => response.text()).then(text => this.getPokemonHelper(text, 7));\r\n\t\tfetch(pokedexGen8).then(response => response.text()).then(text => this.getPokemonHelper(text, 8));\r\n    }\r\n\r\n\t//Build pokemonList to be displayed\r\n\tgeneratePkmnList() {\r\n\t\tlet tempPkmnList = this.state.pokemonList[global.curGeneration - 1];\r\n\t\tlet displayList = [];\r\n\t\tif (tempPkmnList && tempPkmnList[0] !== undefined) {\r\n\t\t\ttempPkmnList.forEach(element => {\r\n\t\t\t\tdisplayList.push(\r\n\t\t\t\t\t<option name={element} key={element}>{element}</option>\r\n\t\t\t\t);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn <div className=\"pokemonList\">\r\n\t\t\t\t<select value={this.state.curPkmn} onChange={(event) => {this.retrievePkmnFromList(event.target.value)}}>\r\n\t\t\t\t\t{displayList}\r\n\t\t\t\t</select>\r\n\t\t\t</div>;\r\n\t}\r\n\r\n    getPokemonHelper(text, generation) {\r\n        let pokemonNames = [];\r\n        pokemonNames = text.split(\"\\n\"); //if this breaks at some point, change split parameter\r\n        //might need to remove below code when running on github\r\n\t\t//TODO Known issue with form pokemon, such as Deoxys, Rotom, etc.\r\n\t\t//Currently removing all regional forms and mega evolutions because we need to format them properly for PokeAPI\r\n\t\t//TODO Another known issue with pokemon with spaces in their names, need to format them correctly for PokeAPI\r\n\t\tlet newPokemonList = [];\r\n\t\tlet tempID = 0;\r\n\t\tfor (let i = 1; i < pokemonNames.length - 1; i++) {\r\n\t\t\tlet tempList = pokemonNames[i].split(\"\\t\");\r\n\t\t\tif (tempList[0] === tempID) {\r\n\t\t\t\tcontinue;\r\n\t\t\t} else {\r\n\t\t\t\ttempID = tempList[0];\r\n\t\t\t\tnewPokemonList.push(tempList[1]);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet tempPkmnList = [];\r\n\t\ttempPkmnList = this.state.pokemonList;\r\n\t\ttempPkmnList[generation - 1] = newPokemonList;\r\n\t\tthis.setState({\r\n\t\t\tpokemonList: tempPkmnList\r\n\t\t});\r\n        return newPokemonList;\r\n    }\r\n\r\n\r\n\trender() {\r\n\t\tlet IVEV = <div className=\"advancedStat\">\r\n\t\t\t\t\t\t\t<b className=\"statText\">IV</b>\r\n\t\t\t\t\t\t\t<b className=\"statText\">EV</b>\r\n\t\t\t\t\t\t</div>;\r\n\r\n\t\tlet pkmnImg = this.state.pkmnImg ? <img className=\"pkmnImg\" src={this.state.pkmnImg} alt=\"pokemonImage\"/> : null;\r\n\t\tlet hpAdvanced = <div className=\"advancedStat\">\r\n\t\t\t\t\t\t\t<input className=\"App-textBox\" type=\"number\" value={this.state.ivInfo.HP} onChange={(e) => this.updatePkmnIV(e, \"HP\")} onBlur={(e) => this.updatePkmnIV(e, \"HP\")} />\r\n\t\t\t\t\t\t\t<input className=\"App-textBox\" type=\"number\" value={this.state.evInfo.HP} onChange={(e) => this.updatePkmnEV(e, \"HP\")} onBlur={(e) => this.updatePkmnEV(e, \"HP\")} />\r\n\t\t\t\t\t\t</div>;\r\n\r\n\t\tlet atkAdvanced = <div className=\"advancedStat\">\r\n\t\t\t\t\t\t\t<input className=\"App-textBox\" type=\"number\" value={this.state.ivInfo.Atk} onChange={(e) => this.updatePkmnIV(e, \"Atk\")} onBlur={(e) => this.updatePkmnIV(e, \"Atk\")} />\r\n\t\t\t\t\t\t\t<input className=\"App-textBox\" type=\"number\" value={this.state.evInfo.Atk} onChange={(e) => this.updatePkmnEV(e, \"Atk\")} onBlur={(e) => this.updatePkmnEV(e, \"Atk\")} />\r\n\t\t\t\t\t\t</div>;\r\n\r\n\t\tlet defAdvanced = <div className=\"advancedStat\">\r\n\t\t\t\t\t\t\t<input className=\"App-textBox\" type=\"number\" value={this.state.ivInfo.Def} onChange={(e) => this.updatePkmnIV(e, \"Def\")} onBlur={(e) => this.updatePkmnIV(e, \"Def\")} />\r\n\t\t\t\t\t\t\t<input className=\"App-textBox\" type=\"number\" value={this.state.evInfo.Def} onChange={(e) => this.updatePkmnEV(e, \"Def\")} onBlur={(e) => this.updatePkmnEV(e, \"Def\")} />\r\n\t\t\t\t\t\t</div>;\r\n\r\n\t\tlet SpAtkAdvanced = <div className=\"advancedStat\">\r\n\t\t\t\t\t\t\t<input className=\"App-textBox\" type=\"number\" value={this.state.ivInfo.SpAtk} onChange={(e) => this.updatePkmnIV(e, \"SpAtk\")} onBlur={(e) => this.updatePkmnIV(e, \"SpAtk\")} />\r\n\t\t\t\t\t\t\t<input className=\"App-textBox\" type=\"number\" value={this.state.evInfo.SpAtk} onChange={(e) => this.updatePkmnEV(e, \"SpAtk\")} onBlur={(e) => this.updatePkmnEV(e, \"SpAtk\")} />\r\n\t\t\t\t\t\t</div>;\r\n\r\n\t\tlet SpDefAdvanced = <div className=\"advancedStat\">\r\n\t\t\t\t\t\t\t<input className=\"App-textBox\" type=\"number\" value={this.state.ivInfo.SpDef} onChange={(e) => this.updatePkmnIV(e, \"SpDef\")} onBlur={(e) => this.updatePkmnIV(e, \"SpDef\")} />\r\n\t\t\t\t\t\t\t<input className=\"App-textBox\" type=\"number\" value={this.state.evInfo.SpDef} onChange={(e) => this.updatePkmnEV(e, \"SpDef\")} onBlur={(e) => this.updatePkmnEV(e, \"SpDef\")} />\r\n\t\t\t\t\t\t</div>;\r\n\r\n\t\tlet SpdAdvanced = <div className=\"advancedStat\">\r\n\t\t\t\t\t\t\t<input className=\"App-textBox\" type=\"number\" value={this.state.ivInfo.Spd} onChange={(e) => this.updatePkmnIV(e, \"Spd\")} onBlur={(e) => this.updatePkmnIV(e, \"Spd\")} />\r\n\t\t\t\t\t\t\t<input className=\"App-textBox\" type=\"number\" value={this.state.evInfo.Spd} onChange={(e) => this.updatePkmnEV(e, \"Spd\")} onBlur={(e) => this.updatePkmnEV(e, \"Spd\")} />\r\n\t\t\t\t\t\t</div>;\r\n\r\n\t\tlet status = global.advancedToggle ? <div className=\"status\">\r\n\t\t<b>Status: </b><Dropdown initial={this.state.status} names={this.statusList} getOption={this.retrieveStatusFromList}/> </div>: null;\r\n\t\t\r\n\t\tlet pkmnDropDown = this.generatePkmnList();\r\n\r\n\t\tlet advancedStats = global.advancedToggle ? <div className=\"statCol\">\r\n\t\t\t\t\t\t\t\t{IVEV}\r\n\t\t\t\t\t\t\t\t{hpAdvanced}\r\n\t\t\t\t\t\t\t\t{atkAdvanced}\r\n\t\t\t\t\t\t\t\t{defAdvanced}\r\n\t\t\t\t\t\t\t\t{SpAtkAdvanced}\r\n\t\t\t\t\t\t\t\t{SpDefAdvanced}\r\n\t\t\t\t\t\t\t\t{SpdAdvanced}\r\n\t\t\t\t\t\t\t</div> : null;\r\n\t\t\t\t\t\t\t\r\n\t\tvar styleWidth = global.advancedToggle ? \"repeat(2, 1fr)\" : \"repeat(1, 1fr)\";\r\n\r\n\t\tvar styleTypeWidth = \"repeat(\" + this.state.types.length + \", 1fr)\";\r\n\t\t\r\n\t\tvar capFirst = this.state.types.length > 0 ? this.state.types[0].charAt(0).toUpperCase() + this.state.types[0].slice(1) : null;\r\n\t\tvar capSecond = this.state.types.length > 1 ? this.state.types[1].charAt(0).toUpperCase() + this.state.types[1].slice(1) : null;\r\n\r\n\t\tlet type2 = this.state.types.length > 1 ? <b className=\"type\" style={{backgroundColor: this.getTypeColor(this.state.types[1])}}>{capSecond}</b> : null;\r\n\r\n\t\tlet typeDisplay = this.state.types.length > 0 ? <div className=\"typeRow\" style={{gridTemplateColumns: styleTypeWidth}}>\r\n\t\t\t\t\t\t\t\t<b className=\"type\" style={{backgroundColor: this.getTypeColor(this.state.types[0])}}>{capFirst}</b>\r\n\t\t\t\t\t\t\t\t{type2}\r\n\t\t\t\t\t\t\t</div> : null;\r\n\t\t\r\n\t\tlet disCont = (this.state.display && (this.props.loc === 1)) ? <Dropdown names = {this.state.nameList} getOption = {this.setSavedPokemon}>Saved Pokemon</Dropdown>: null;\r\n\t\t\r\n\t\tlet serverPokemon = typeof (this.state.uid) !== 'undefined' && this.state.uid.length > 0 ? <div className=\"App-login\">\r\n\t\t\t<b>Saved Pokemon </b>\r\n\t\t\t<div classname=\"App-hcontainer\">\r\n\t\t\t\t{/* Need to fix the dropdown as it is only show null option instead of full options*/}\r\n\t\t\t\t<button onClick={this.loadPokemon}>load</button>\r\n\t\t\t\t{disCont}\r\n\t\t\t</div>\r\n\t\t\t<div classname=\"App-hcontainer\">\r\n\t\t\t\t<input className=\"App-textBox\" type=\"text\" value={this.state.savedName} style={{width: \"50%\", height: \"80%\"}}/>\r\n\t\t\t\t<button onClick={this.savePokemon}>Save</button>\r\n\t\t\t</div>\r\n\t\t</div> : null;\r\n\r\n        return (\r\n            <div className = \"pokemon\">\r\n\t\t\t\t{pkmnDropDown}\r\n\t\t\t\t<br/>\r\n\t\t\t\t{pkmnImg}\r\n\t\t\t\t<br/>\r\n\t\t\t\t{typeDisplay}\r\n\t\t\t\t<div className=\"pkmnLevel\">\r\n\t\t\t\t\t<b>Level:</b>\r\n\t\t\t\t\t<input type=\"number\" value={this.state.level} onChange={this.updatePkmnLevel} onBlur={this.updatePkmnLevel}/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"nature\">\r\n\t\t\t\t\t<b>Nature: </b>\r\n\t\t\t\t\t<Dropdown names={this.natureList} initial={this.state.nature} getOption={this.retrieveNatureFromList}/>\r\n\t\t\t\t</div>\r\n\t\t\t\t{status}\r\n\t\t\t\t<div className=\"statRow\" style={{gridTemplateColumns: styleWidth}}>\r\n\t\t\t\t\t<div className=\"statCol\">\r\n\t\t\t\t\t\t<b className=\"statText\">Stats</b>\r\n\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t<b className=\"statText\">HP: {this.state.totalStats.HP}</b>\r\n\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t<b className=\"statText\">ATK: {this.state.totalStats.Atk}</b>\r\n\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t<b className=\"statText\">DEF: {this.state.totalStats.Def}</b>\r\n\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t<b className=\"statText\">SP ATK: {this.state.totalStats.SpAtk}</b>\r\n\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t<b className=\"statText\">SP DEF: {this.state.totalStats.SpDef}</b>\r\n\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t<b className=\"statText\">SPD: {this.state.totalStats.Spd}</b>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{advancedStats}\r\n\t\t\t\t</div>\r\n\t\t\t\t{serverPokemon}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Pokemon;","import React from 'react';\r\nimport './App.css';\r\nimport SignIn from './SignIn.jsx';\r\nimport Pokemon from './Pokemon.jsx';\r\nimport moveCalculator from './moveCalculator.js';\r\nimport './global.js';\r\nimport Dropdown from './Dropdown';\r\n//import firebase from 'firebase';\r\n//import createFirebase from './firebase.js';\r\n\r\nexport class HomePage extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n\t\tthis.retrieveAtkPokemonInfo = this.retrieveAtkPokemonInfo.bind(this);\r\n\t\tthis.retrieveDefPokemonInfo = this.retrieveDefPokemonInfo.bind(this);\r\n\t\tthis.calculateMoves = this.calculateMoves.bind(this);\r\n\t\tthis.switchPokemon = this.switchPokemon.bind(this);\r\n\t\tthis.advancedOptions = this.advancedOptions.bind(this);\r\n\t\tthis.changeGeneration = this.changeGeneration.bind(this);\r\n\t\tthis.getAtkPokemon = this.getAtkPokemon.bind(this);\r\n\t\tthis.retrieveWeatherFromList = this.retrieveWeatherFromList.bind(this);\r\n\t\tthis.retrieveTerrainFromList = this.retrieveTerrainFromList.bind(this);\r\n\t\tthis.resetSettings = this.resetSettings.bind(this);\r\n\t\tthis.createMoveList = this.createMoveList.bind(this);\r\n\r\n\t\tthis.moveCalculator = new moveCalculator();\r\n\t\t\r\n\t\tthis.weather_types = {\r\n\t\t\t\"Clear\": 1,\r\n            \"Harsh Sunlight\": 2,\r\n            \"Rain\": 3,\r\n            \"Sandstorm\": 4,\r\n            \"Hail\": 5,\r\n            \"Shadowy Aura\": 6,\r\n            \"Fog\": 7,\r\n            \"Strong Winds\": 8,\r\n\t\t\t\"Extremely Harsh Sunlight\": 9,\r\n\t\t\t\"Heavy Rain\": 10\r\n\t\t};\r\n\r\n\t\tthis.terrain_types = {\r\n            \"Normal\" : 1,\r\n            \"Electric\" : 2,\r\n            \"Grassy\" : 3,\r\n            \"Misty\" : 4,\r\n            \"Psychic\" : 5\r\n        };\r\n\r\n\t\tthis.weatherList1 = [\"Clear\"];\r\n\t\tthis.weatherList2 = [\"Clear\", \"Harsh Sunlight\", \"Rain\", \"Sandstorm\"];\r\n\t\tthis.weatherList3 = [\"Clear\", \"Harsh Sunlight\", \"Rain\", \"Sandstorm\", \"Hail\", \"Shadowy Aura\"];\r\n\t\tthis.weatherList45 = [\"Clear\", \"Harsh Sunlight\", \"Rain\", \"Sandstorm\", \"Hail\", \"Fog\"];\r\n\t\tthis.weatherList678 = [\"Clear\", \"Harsh Sunlight\", \"Rain\", \"Sandstorm\", \"Hail\", \"Fog\", \"Heavy Rain\", \"Extremely Harsh Sunlight\", \"Strong Winds\"];\r\n\r\n\t\tthis.weatherList = null;\r\n\r\n\t\tthis.terrainList = [\"Normal\",\"Electric\",\"Grassy\",\"Misty\",\"Psychic\"]\r\n\r\n\t\tthis.state = {\r\n\t\t\tatkPkmnInfo: {},\r\n\t\t\tdefPkmnInfo: {},\r\n\t\t\tisAdvanced: false,\r\n\t\t\tcalculatedMoves: null,\r\n\t\t\tcalculating: false,\r\n\t\t\tweather: \"Clear\",\r\n\t\t\tweatherList: null\r\n\t\t};\r\n\t\tglobal.advancedToggle = false;\r\n\t\tglobal.curGeneration = 3;\r\n\t}\r\n\r\n\tresetSettings() {\r\n\t\tif (typeof (global.pkmn1) === 'undefined' || typeof (global.pkmn2) === 'undefined') {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar base1 = global.pkmn1.state.baseStats;\r\n\t\tvar nature1 = global.pkmn1.state.nature;\r\n\t\tvar base2 = global.pkmn2.state.baseStats;\r\n\t\tvar nature2 = global.pkmn2.state.nature;\r\n\t\tvar clr1 = {\r\n\t\t\tHP: 0,\r\n\t\t\tAtk: 0,\r\n\t\t\tSpAtk: 0,\r\n\t\t\tDef: 0,\r\n\t\t\tSpDef: 0,\r\n\t\t\tSpd: 0\r\n\t\t};\r\n\t\tvar clr2 = {\r\n\t\t\tHP: 0,\r\n\t\t\tAtk: 0,\r\n\t\t\tSpAtk: 0,\r\n\t\t\tDef: 0,\r\n\t\t\tSpDef: 0,\r\n\t\t\tSpd: 0\r\n\t\t};\r\n\t\tvar clr3 = {\r\n\t\t\tHP: 0,\r\n\t\t\tAtk: 0,\r\n\t\t\tSpAtk: 0,\r\n\t\t\tDef: 0,\r\n\t\t\tSpDef: 0,\r\n\t\t\tSpd: 0\r\n\t\t};\r\n\t\tvar clr4 = {\r\n\t\t\tHP: 0,\r\n\t\t\tAtk: 0,\r\n\t\t\tSpAtk: 0,\r\n\t\t\tDef: 0,\r\n\t\t\tSpDef: 0,\r\n\t\t\tSpd: 0\r\n\t\t};\r\n\t\tglobal.pkmn1.setState({\r\n\t\t\tivInfo: clr1,\r\n\t\t\tevInfo: clr2,\r\n\t\t\tlevel: 1\r\n\t\t});\r\n\t\tglobal.pkmn2.setState({\r\n\t\t\tivInfo: clr3,\r\n\t\t\tevInfo: clr4,\r\n\t\t\tlevel: 1\r\n\t\t});\r\n\t\tglobal.pkmn1.updateTotalStats(global.pkmn1.statCalculator.getStatTotals(base1, clr1, clr2, 1, nature1));\r\n\t\tglobal.pkmn2.updateTotalStats(global.pkmn2.statCalculator.getStatTotals(base2, clr3, clr4, 1, nature2));\r\n    }\r\n    \r\n\t\r\n    /*The Idea here is that since our website is technically only one page, there is nearly \r\n\t* no way that we can encounter the error that we were getting with Badger-Bytes. I think\r\n\t* the only situation that could cause us to call more than once would be when the user needs\r\n\t* to reset their password.\r\n\t*/\r\n    componentDidMount() {\r\n        /*let fbMenu = [];\r\n        //call firebase here for menu info\r\n        firebase.database().ref('Menu/').once('value', (snapshot) => {\r\n            snapshot.forEach((childSnapshot) => {\r\n                var childKey = childSnapshot.key;\r\n                var childData = childSnapshot.val();\r\n                let menuItem = {\r\n                    iid: childKey,\r\n                    name: childData.name,\r\n                    picture: childData.picture,\r\n                    price: childData.price,\r\n                    availability: childData.availability\r\n                };\r\n                fbMenu.push(menuItem);\r\n                 // ...\r\n            });\r\n\t\t\tthis.setState({\r\n\t\t\t\thasData: true,\r\n\t\t\t\tmenu: fbMenu,\r\n\t\t\t\thasUpdated: true\r\n\t\t\t});\r\n        });*/\r\n\t\tglobal.curGeneration = 3;\r\n    }\r\n\r\n\t//Callback function sent to the Attacking Pokemon component to retrieve pokemon info\r\n\tretrieveAtkPokemonInfo(pkmnInfo) {\r\n\t\tthis.setState({\r\n\t\t\tatkPkmnInfo: {...pkmnInfo}\r\n\t\t});\r\n\t}\r\n\r\n\t//Callback function sent to Defending Pokemon component to retrieve pokemon info\r\n\tretrieveDefPokemonInfo(pkmnInfo) {\r\n\t\tthis.setState({\r\n\t\t\tdefPkmnInfo: {...pkmnInfo}\r\n\t\t});\r\n\t}\r\n\r\n\tretrieveWeatherFromList(selectedWeather){\r\n\t\tthis.setState({\r\n\t\t\tweather: selectedWeather\r\n\t\t});\r\n\t}\r\n\t\r\n\tretrieveTerrainFromList(selectedTerrain){\r\n\t\tthis.setState({\r\n\t\t\tterrain: selectedTerrain\r\n\t\t});\r\n\t}\r\n\r\n\tswitchPokemon() {\r\n\t\tif (typeof (global.pkmn1) === 'undefined' || typeof (global.pkmn2) === 'undefined') {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar tempState = global.pkmn1.state;\r\n\t\tglobal.pkmn1.setState({\r\n\t\t    uid: global.pkmn2.state.uid,\r\n\t\t\tcurPkmn: global.pkmn2.state.curPkmn,\r\n\t\t\tbaseStats: global.pkmn2.state.baseStats,\r\n\t\t\tivInfo: global.pkmn2.state.ivInfo,\r\n\t\t\tevInfo: global.pkmn2.state.evInfo,\r\n\t\t\ttotalStats: global.pkmn2.state.totalStats,\r\n\t\t\tlevel: global.pkmn2.state.level,\r\n\t\t\tnature: global.pkmn2.state.nature,\r\n\t\t\tstatus: global.pkmn2.state.status,\r\n\t\t\tmoves: global.pkmn2.state.moves,\r\n\t\t\ttypes: global.pkmn2.state.types,\r\n\t\t\tpkmnImg: global.pkmn2.state.pkmnImg,\r\n\t\t\tisAdvanced: global.pkmn2.state.isAdvanced,\r\n\t\t\treadySwap: global.pkmn2.state.readySwap\r\n\t\t});\r\n\t\tglobal.pkmn2.setState({\r\n\t\t\tuid: tempState.uid,\r\n\t\t\tcurPkmn: tempState.curPkmn,\r\n\t\t\tbaseStats: tempState.baseStats,\r\n\t\t\tivInfo: tempState.ivInfo,\r\n\t\t\tevInfo: tempState.evInfo,\r\n\t\t\ttotalStats: tempState.totalStats,\r\n\t\t\tlevel: tempState.level,\r\n\t\t\tnature: tempState.nature,\r\n\t\t\tstatus: tempState.status,\r\n\t\t\tmoves: tempState.moves,\r\n\t\t\ttypes: tempState.types,\r\n\t\t\tpkmnImg: tempState.pkmnImg,\r\n\t\t\tisAdvanced: tempState.isAdvanced,\r\n\t\t\treadySwap: tempState.readySwap\r\n\t\t});\r\n\t}\r\n\t\r\n\tgetAtkPokemon(){\r\n\t\treturn this.state.atkPkmnInfo;\r\n\t}\r\n\r\n\t//Returns a list of the best possible moves that can be used\r\n\tasync calculateMoves(event) {\r\n\r\n\t\tthis.setState({\r\n\t\t\tcalculating: true\r\n\t\t});\r\n\t\tlet calcMoves = await this.moveCalculator.moveCalculator(this.state.atkPkmnInfo, this.state.defPkmnInfo, global.curGeneration, {weather: this.weather_types[this.state.weather], terrain: this.terrain_types[this.state.terrain]});\r\n\t\tcalcMoves = calcMoves.slice(0, 4);\r\n\t\tthis.setState({\r\n\t\t\tcalculatedMoves: calcMoves,\r\n\t\t\tcalculating: false\r\n\t\t});\r\n\t}\r\n\r\n\tadvancedOptions() {\r\n\t\tglobal.advancedToggle = !global.advancedToggle;\r\n\t\tthis.forceUpdate();\r\n\t}\r\n\r\n\tchangeGeneration(event) {\r\n\t\tglobal.curGeneration = parseInt(event.target.value);\r\n\t\tthis.setState({\r\n\t\t\tweather: \"Clear\"\r\n\t\t});\r\n\t\tthis.forceUpdate();\r\n\t\tglobal.pkmn1.forceUpdate();\r\n\t\tglobal.pkmn2.forceUpdate();\r\n\t}\r\n\r\n\tgetTypeColor(type) {\r\n\t\tswitch (type) {\r\n\t\t\tcase \"Fire\":\r\n\t\t\t\treturn \"rgba(238,129,48,1)\";\r\n\t\t\tcase \"Water\":\r\n\t\t\t\treturn \"rgba(99,144,240,1)\";\r\n\t\t\tcase \"Electric\":\r\n\t\t\t\treturn \"rgba(247,208,44,1)\";\r\n\t\t\tcase \"Grass\":\r\n\t\t\t\treturn \"rgba(122,199,76,1)\";\r\n\t\t\tcase \"Ice\":\r\n\t\t\t\treturn \"rgba(150,217,214,1)\";\r\n\t\t\tcase \"Fighting\":\r\n\t\t\t\treturn \"rgba(194,46,40,1)\";\r\n\t\t\tcase \"Poison\":\r\n\t\t\t\treturn \"rgba(163,62,161,1)\";\r\n\t\t\tcase \"Ground\":\r\n\t\t\t\treturn \"rgba(226,191,101,1)\";\r\n\t\t\tcase \"Flying\":\r\n\t\t\t\treturn \"rgba(169,143,243,1)\";\r\n\t\t\tcase \"Psychic\":\r\n\t\t\t\treturn \"rgba(249,85,135,1)\";\r\n\t\t\tcase \"Bug\":\r\n\t\t\t\treturn \"rgba(166,185,26,1)\";\r\n\t\t\tcase \"Rock\":\r\n\t\t\t\treturn \"rgba(182,161,54,1)\";\r\n\t\t\tcase \"Ghost\":\r\n\t\t\t\treturn \"rgba(115,87,151,1)\";\r\n\t\t\tcase \"Dragon\":\r\n\t\t\t\treturn \"rgba(111,53,252,1)\";\r\n\t\t\tcase \"Dark\":\r\n\t\t\t\treturn \"rgba(112,87,70,1)\";\r\n\t\t\tcase \"Steel\":\r\n\t\t\t\treturn \"rgba(183,183,206,1)\";\r\n\t\t\tcase \"Fairy\":\r\n\t\t\t\treturn \"rgba(214,133,173,1)\";\r\n\t\t\tdefault: //normal type\r\n\t\t\t\treturn \"rgba(168,167,122,1)\";\r\n\t\t}\r\n\t}\r\n\r\n\tcreateMoveList() {\r\n\t\tlet calcMoveList = this.state.calculatedMoves;\r\n\t\tlet displayList = [];\r\n\t\tcalcMoveList.forEach(element => {\r\n\t\t\tlet color = this.getTypeColor(element.move_type);\r\n\t\t\tlet randomPlace = 1;//Math.floor(Math.random() * 3);// make this * 3\r\n\t\t\tlet finalColor = \"linear-gradient(to right, \" + color;\r\n\t\t\tfor (var i = 0; i < 3; i++) {\r\n\t\t\t\tif (i === randomPlace) {\r\n\t\t\t\t\tfinalColor += \", white\";\r\n\t\t\t\t} else {\r\n\t\t\t\t\tfinalColor += \", \" + color;\r\n                }\r\n\t\t\t}\r\n\t\t\tfinalColor += \", \" + color + \")\";\r\n\t\t\tdisplayList.push(\r\n\t\t\t\t<div className=\"moveItem\" style={{ backgroundImage: finalColor }}>\r\n\t\t\t\t\t<b>{element.move}</b>\r\n\t\t\t\t\t<b>{element.min_dmg + \"-\" + element.max_dmg}</b>\r\n\t\t\t\t\t<b>{element.move_type}</b>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t});\r\n\t\treturn displayList;\r\n\t}\r\n\r\n    render () {\r\n\t\tlet moveList = this.state.calculatedMoves ? this.createMoveList() : null;\r\n\t\tlet calculateButton = !this.state.calculating ? <button className=\"button\" onClick={this.calculateMoves} >CALCULATE</button> : <button className=\"button\" isDisabled={true}>Calculating...</button>;\r\n\t\tlet generationSelection = global.advancedToggle ? <div>\r\n\t\t\t\t\t\t<div className=\"generationRadio\" onChange={this.changeGeneration} value={global.curGeneration}>\r\n\t\t\t\t\t\t\t<h4>Current Generation {global.curGeneration}</h4>\r\n\t\t\t\t\t\t\t<input defaultChecked type=\"radio\" value={3} name=\"generation\"/> 3\r\n\t\t\t\t\t\t\t<input type=\"radio\" value={4} name=\"generation\"/> 4\r\n\t\t\t\t\t\t\t<input type=\"radio\" value={5} name=\"generation\"/> 5\r\n\t\t\t\t\t\t\t<input type=\"radio\" value={6} name=\"generation\"/> 6\r\n\t\t\t\t\t\t\t<input type=\"radio\" value={7} name=\"generation\"/> 7\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div> : null;\r\n\r\n\t\tlet weatherSelection1 = global.advancedToggle && global.curGeneration === 1? \r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<div className=\"weatherDropDown\" onChange={this.changeWeather}>\r\n\t\t\t\t\t\t\t<h4>Weather</h4>\r\n\t\t\t\t\t\t\t<Dropdown initial={this.state.weather} names={this.weatherList1} getOption={this.retrieveWeatherFromList}/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>: null;\r\n\r\n\t\tlet weatherSelection2 = global.advancedToggle && global.curGeneration === 2? \r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<div className=\"weatherDropDown\" onChange={this.changeWeather}>\r\n\t\t\t\t\t\t\t<h4>Weather</h4>\r\n\t\t\t\t\t\t\t<Dropdown initial={this.state.weather} names={this.weatherList2} getOption={this.retrieveWeatherFromList}/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>: null;\r\n\r\n\t\tlet weatherSelection3 = global.advancedToggle && global.curGeneration === 3? \r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<div className=\"weatherDropDown\" onChange={this.changeWeather}>\r\n\t\t\t\t\t\t\t<h4>Weather</h4>\r\n\t\t\t\t\t\t\t<Dropdown initial={this.state.weather} names={this.weatherList3} getOption={this.retrieveWeatherFromList}/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>: null;\r\n\r\n\t\tlet weatherSelection45 = global.advancedToggle && (global.curGeneration === 4 || global.curGeneration === 5)? \r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<div className=\"weatherDropDown\" onChange={this.changeWeather}>\r\n\t\t\t\t\t\t\t<h4>Weather</h4>\r\n\t\t\t\t\t\t\t<Dropdown initial={this.state.weather} names={this.weatherList45} getOption={this.retrieveWeatherFromList}/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>: null;\r\n\r\n\t\tlet weatherSelection678 = global.advancedToggle && (global.curGeneration === 6 || global.curGeneration === 7 || global.curGeneration === 8)? \r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<div className=\"weatherDropDown\" onChange={this.changeWeather}>\r\n\t\t\t\t\t\t\t<h4>Weather</h4>\r\n\t\t\t\t\t\t\t<Dropdown initial={this.state.weather} names={this.weatherList678} getOption={this.retrieveWeatherFromList}/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>: null;\r\n\t\t\r\n\t\tlet terrainSelection = global.advancedToggle && (global.curGeneration === 7 || global.curGeneration === 8)? \r\n\t\t<div className=\"App-body\">\r\n\t\t\t<div className=\"terrainDropDown\" onChange={this.changeTerrain}>\r\n\t\t\t\t<h4>Terrain</h4>\r\n\t\t\t\t<Dropdown initial={this.state.terrain} names={this.terrainList} getOption={this.retrieveTerrainFromList}/>\r\n\t\t\t</div>\r\n\t\t\t</div> : null;\r\n\r\n\t\tlet wholeList = this.state.calculatedMoves ?\r\n\t\t\t<div className=\"moveList\">\r\n\t\t\t\t{moveList}\r\n\t\t\t</div> : null;\r\n\r\n        return (\r\n\t\t\t<div className = \"App\" style={{fontSize: 25}}>\r\n\t\t\t\t<div className=\"App-hcontainer\">\r\n\t\t\t\t\t<header className=\"App-header\">\r\n\t\t\t\t\t\t<h1>Pokemon Move Thrower!</h1>\r\n\t\t\t\t\t</header>\r\n\t\t\t\t\t<div className=\"App-login\">\r\n\t\t\t\t\t\t<SignIn preference = {this.state.atkPkmnInfo}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"App-mid\">\r\n\t\t\t\t\t<div className=\"App-body\">\r\n\t\t\t\t\t\t<b>Attacking Pokemon</b>\r\n\t\t\t\t\t\t<Pokemon loc={0} getPkmnInfo={this.retrieveAtkPokemonInfo} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"App-body\">\r\n\t\t\t\t\t\t<button className=\"button\" style={{fontSize: 18, backgroundColor:\"white\"}} onClick={this.switchPokemon}>Switch Roles</button>\r\n\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t{calculateButton}\r\n\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t<b>Advanced Options</b>\r\n\t\t\t\t\t\t<input type=\"checkbox\" style={{height: 20, width: 20, backgroundColor:\"white\"}} onChange={this.advancedOptions} />\r\n\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<button className=\"button\" style={{ fontSize: 18, backgroundColor: \"white\" }} onClick={this.resetSettings}>Reset Settings</button>\r\n\t\t\t\t\t\t<div className=\"advancedBody\">\r\n\t\t\t\t\t\t\t{generationSelection}\r\n\t\t\t\t\t\t\t{weatherSelection1}\r\n\t\t\t\t\t\t\t{weatherSelection2}\r\n\t\t\t\t\t\t\t{weatherSelection3}\r\n\t\t\t\t\t\t\t{weatherSelection45}\r\n\t\t\t\t\t\t\t{weatherSelection678}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"App-body\">\r\n\t\t\t\t\t\t<b>Defending Pokemon</b>\r\n\t\t\t\t\t\t<Pokemon loc={1} getPkmnInfo={this.retrieveDefPokemonInfo}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"App-body\" style={{ display: \"flex\", minWidth: \"100%\" }}>\r\n\t\t\t\t\t<div className=\"advancedBody2\">\r\n\t\t\t\t\t\t{terrainSelection}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<b style={{ textDecoration: \"underline\" }}>Recommended Moves</b>\r\n\t\t\t\t\t{wholeList}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HomePage;","import React from 'react';\r\nimport './App.css';\r\nimport firebase from 'firebase';\r\nimport { Redirect } from 'react-router-dom';\r\nimport createFirebase from './firebase.js';\r\nimport './global.js';\r\n\r\nexport class SignIn extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.sendLogIn = this.sendLogIn.bind(this);\r\n        this.sendSignUp = this.sendSignUp.bind(this);\r\n        this.sendSignOut = this.sendSignOut.bind(this);\r\n        this.signInDisplay = this.signInDisplay.bind(this);\r\n        this.loggedInDisplay = this.loggedInDisplay.bind(this);\r\n        this.updateEmail = this.updateEmail.bind(this);\r\n        this.updatePassword = this.updatePassword.bind(this);\r\n        this.resetErrors = this.resetErrors.bind(this);\r\n\t\tthis.updateUserInfo = this.updateUserInfo.bind(this);\r\n        let fbInitialized = false;\r\n\r\n\t\tif (this.props.state) {\r\n\t\t\tfbInitialized = true;\r\n\t\t}\r\n\r\n        this.state = {\r\n            signedIn: false,\r\n            uid: \"\",\r\n            username: \"\",\r\n            password: \"\",\r\n            logInError: \"\",\r\n            signUpError: \"\",\r\n            preference: \"\",\r\n            current:{},\r\n            fireBaseInitialized: fbInitialized,\r\n            isButtonDisabled: false,\r\n        };\r\n    }\r\n\r\n    //function that will bring the user info back to App.js through a passed in function\r\n    updateUserInfo() {\r\n        //Call the callback function here\r\n    }\r\n\r\n    updateEmail(event) {\r\n        this.setState({\r\n            username: event.target.value,\r\n            isButtonDisabled: false\r\n        });\r\n    }\r\n\r\n    //Updates the password whenever the user changes it\r\n    updatePassword(event) {\r\n        this.setState({\r\n            password: event.target.value,\r\n            isButtonDisabled: false\r\n        });\r\n    }\r\n\r\n    resetErrors() {\r\n        this.setState({\r\n            logInError: false,\r\n            signUpError: false\r\n        });\r\n    }\r\n\r\n    sendLogIn(){\r\n        this.resetErrors();\r\n        //TODO Redirect user to user page, where they can change account info.\r\n        firebase.auth().signInWithEmailAndPassword(this.state.username, this.state.password)\r\n            .then((userCredential) => {\r\n                // Signed in\r\n                var user = userCredential.user;\r\n                let userInfo;\r\n                firebase.database().ref('users/' + user.uid).once('value', (snap)=>{\r\n                    userInfo = snap.val();\r\n                    this.setState({\r\n                        signedIn: true,\r\n                        uid: user.uid,\r\n                        preference: userInfo.preference\r\n                    });\r\n                });\r\n                global.pkmn1.setState({ uid: user.uid });\r\n                global.pkmn2.setState({ uid: user.uid });\r\n                \r\n            }).catch((error) => {\r\n                //var errorCode = error.code;\r\n                var errorMessage = error.message;\r\n                console.log(errorMessage);\r\n                this.setState({\r\n                    logInError: errorMessage,\r\n                    isButtonDisabled: true\r\n                });\r\n            });\r\n    \r\n    }\r\n\r\n    sendSignUp() {\r\n        this.resetErrors();\r\n        firebase.auth().createUserWithEmailAndPassword(this.state.username, this.state.password)\r\n            .then((userCredential) => {\r\n                // Signed in \r\n                var user = userCredential.user;\r\n                //var database = firebase.database();\r\n                firebase.database().ref('users/' + user.uid).set({\r\n                    signedIn: true,\r\n                    uid: user.uid,\r\n                    username: this.state.username,\r\n                    password: this.state.password,\r\n                    logInError: false,\r\n                    signUpError: false,\r\n                    preference: \"\",\r\n                    current:\"\",\r\n                    isButtonDisabled: false,\r\n                });\r\n                this.setState({\r\n                    signedIn: true,\r\n                    uid: user.uid,\r\n                });\r\n\r\n                //TODO Redirect user to finish signing up here\r\n            })\r\n            .catch((error) => {\r\n                //var errorCode = error.code;\r\n                var errorMessage = error.message;\r\n                console.log(errorMessage);\r\n                this.setState({\r\n                    signUpError: errorMessage,\r\n                    isButtonDisabled: true\r\n                });\r\n            });\r\n    }\r\n\r\n    sendSignOut(){\r\n        this.resetErrors();\r\n        //TODO Redirect user to user page, where they can change account info.\r\n        firebase.auth().signOut()\r\n            .then(() => {\r\n                firebase.database().ref('users/' + this.state.uid).update({\r\n                    signedIn : false,\r\n                });\r\n                this.setState({\r\n                    signedIn: false,\r\n                    uid: \"\",\r\n                    username: \"\",\r\n                    password: \"\",\r\n                    preference: \"\",\r\n                    isButtonDisabled: false,\r\n                });\r\n                global.pkmn1.setState({ uid: \"\" });\r\n                global.pkmn2.setState({ uid: \"\" });\r\n            })\r\n            .catch((error) => {\r\n                //var errorCode = error.code;\r\n                var errorMessage = error.message;\r\n                console.log(errorMessage);\r\n                this.setState({\r\n                    logInError: errorMessage,\r\n                    isButtonDisabled: true\r\n                });\r\n            });\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.state.fireBaseInitialized === false) {\r\n            createFirebase();\r\n            this.setState({\r\n                fireBaseInitialized: true\r\n            });\r\n        }\r\n    }\r\n\r\n    //function returning display for the sign in display\r\n    signInDisplay() {\r\n\r\n        let signUpErrorMessage = this.state.signUpError;\r\n        const signUpError = signUpErrorMessage !== \"\" ? <p>{signUpErrorMessage}</p> : null;\r\n\r\n        let logInErrorMessage = this.state.logInError;\r\n        const logInError = logInErrorMessage !== \"\" ? <p>{logInErrorMessage}</p> : null;\r\n\r\n        let signIn = this.state.signedIn;\r\n        const signInRedirect = signIn ? <Redirect push to={{ pathname: \"/\", state: { uid: this.state.uid, username: this.state.username, password: this.state.password, \r\n             fireBaseInitialized: this.state.fireBaseInitialized }}} /> : null;\r\n\r\n        return (\r\n            <div classname=\"signInDisplay\">\r\n                <b>Email: </b>\r\n                <input type=\"text\" onChange={this.updateEmail} onBlur={this.updateEmail} />\r\n\t\t\t\t<br/>\r\n                <b>Password: </b>\r\n                <input type=\"password\" onChange={this.updatePassword} onBlur={this.updatePassword}/>\r\n                <div className=\"signInButtons\">\r\n                    <button onClick={this.sendLogIn} disabled={this.state.isButtonDisabled}>Log In</button>\r\n                    <button onClick={this.sendSignUp} disabled={this.state.isButtonDisabled}>Sign Up</button>\r\n                </div>\r\n                <div style={{fontSize: 15}}>\r\n                    {logInError}\r\n                    {signUpError}\r\n                    {signInRedirect}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    //function returning the display for the logged in display\r\n    \r\n    loggedInDisplay() {\r\n        let displayUsername = this.state.username;\r\n        //console.log(this.state.signedIn);\r\n        \r\n        return (\r\n            <div classname=\"loggedInDisplay\">\r\n                <p>Hello, {displayUsername}!</p>\r\n                <div className=\"loggedInButtons\">\r\n                    <button onClick = {this.sendSignOut} disabled={this.state.isButtonDisabled}>Log Out</button>\r\n                </div>\r\n            </div> \r\n        );\r\n    }\r\n\r\n   /*<div className=\"nature\">\r\n\t\t\t\t\t\t\t<b>Saved Pokemon </b>\r\n\t\t\t\t\t\t\t<Dropdown names={this.getSavedPokemon()} getOption={this.getSavedPokemon()}/>\r\n\t\t\t\t</div>\r\n    */\r\n\r\n    render() {\r\n        let curUID = this.state.uid;\r\n        let accountDisplay = curUID === \"\" ? this.signInDisplay() : this.loggedInDisplay();\r\n        return (\r\n            <div className = \"signIn\">\r\n                {accountDisplay}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SignIn;","import firebase from 'firebase';\r\n\r\nfunction createFirebase() {\r\n    var firebaseConfig = {\r\n        apiKey: \"AIzaSyCAZBBhtcON0bguoWRHr9CuGSRksxHmMeM\",\r\n        authDomain: \"movecalc.firebaseapp.com\",\r\n        projectId: \"movecalc\",\r\n        storageBucket: \"movecalc.appspot.com\",\r\n        messagingSenderId: \"330689954497\",\r\n        appId: \"1:330689954497:web:0050e1da2ac081abca4a40\",\r\n        measurementId: \"G-KTL8R238RY\",\r\n        databaseURL: \"https://movecalc-default-rtdb.firebaseio.com/\"\r\n      };\r\n      \r\n    // Initialize Firebase\r\n    firebase.initializeApp(firebaseConfig);\r\n    firebase.analytics();\r\n}\r\n\r\nexport default createFirebase;","export class StatCalculator {\r\n    constructor() {\r\n        this.getStatTotals = this.getStatTotals.bind(this);\r\n    }\r\n\r\ngetStatTotals(baseStats, EVs, IVs, level, nature) {\r\n    let tempNature = nature.toLowerCase();\r\n    let statTotals = {\r\n        HP: this.setHealth(baseStats.HP, EVs.HP, IVs.HP, level, tempNature),\r\n        Atk: this.setAttack(baseStats.Atk, EVs.Atk, IVs.Atk, level, tempNature),\r\n        Def: this.setDefense(baseStats.Def, EVs.Def, IVs.Def, level, tempNature),\r\n        SpAtk: this.setSpAttack(baseStats.SpAtk, EVs.SpAtk, IVs.SpAtk, level, tempNature),\r\n        SpDef: this.setSpDefense(baseStats.SpDef, EVs.SpDef, IVs.SpDef, level, tempNature),\r\n        Spd: this.setSpeed(baseStats.Spd, EVs.Spd, IVs.Spd, level, tempNature)\r\n    };\r\n\r\n    return statTotals;\r\n}\r\n\r\n//does gen 3 calculation for now\r\n setHealth(baseHealth, EVHealth, IVHealth, level, nature) {\r\n    let HP = ((2 * baseHealth + IVHealth + Math.floor(EVHealth / 4)) * level);\r\n    HP = Math.floor(HP / 100);\r\n    HP = HP + level + 10;\r\n    return HP;\r\n}\r\n\r\n setAttack(baseAttack, EVAttack, IVAttack, level, nature) {\r\n    let Attack = ((2 * baseAttack + IVAttack + Math.floor(EVAttack / 4)) * level);\r\n    Attack = Math.floor(Attack / 100);\r\n    Attack = Attack + 5;\r\n    let multiplier = 1;\r\n    if (nature === \"lonely\" || nature === \"brave\" ||\r\n        nature === \"adamant\" || nature === \"naughty\") {\r\n        multiplier = 1.1;\r\n    }\r\n    if (nature === \"bold\" || nature === \"timid\" ||\r\n        nature === \"modest\" || nature === \"calm\") {\r\n        multiplier = .9;\r\n    }\r\n    Attack = Math.floor(Attack * multiplier);\r\n    return Attack;\r\n}\r\n\r\n setDefense(baseDefense, EVDefense, IVDefense, level, nature) {\r\n    let Defense = ((2 * baseDefense + IVDefense + Math.floor(EVDefense / 4)) * level);\r\n    Defense = Math.floor(Defense / 100);\r\n    Defense = Defense + 5;\r\n    let multiplier = 1;\r\n    if (nature === \"bold\" || nature === \"relaxed\" ||\r\n        nature === \"impish\" || nature === \"lax\") {\r\n        multiplier = 1.1;\r\n    }\r\n    if (nature === \"lonely\" || nature === \"hasty\" ||\r\n        nature === \"mild\" || nature === \"gentle\") {\r\n        multiplier = .9;\r\n    }\r\n    Defense = Math.floor(Defense * multiplier);\r\n    return Defense;\r\n}\r\n\r\n setSpAttack(baseSpAttack, EVSpAttack, IVSpAttack, level, nature) {\r\n    let SpAttack = ((2 * baseSpAttack + IVSpAttack + Math.floor(EVSpAttack / 4)) * level);\r\n    SpAttack = Math.floor(SpAttack / 100);\r\n    SpAttack = SpAttack + 5;\r\n    let multiplier = 1;\r\n    if (nature === \"modest\" || nature === \"mild\" ||\r\n        nature === \"quiet\" || nature === \"rash\") {\r\n        multiplier = 1.1;\r\n    }\r\n    if (nature === \"adamant\" || nature === \"impish\" ||\r\n        nature === \"jolly\" || nature === \"careful\") {\r\n        multiplier = .9;\r\n    }\r\n    SpAttack = Math.floor(SpAttack * multiplier);\r\n    return SpAttack;\r\n}\r\n\r\n setSpDefense(baseSpDefense, EVSpDefense, IVSpDefense, level, nature) {\r\n    let SpDefense = ((2 * baseSpDefense + IVSpDefense + Math.floor(EVSpDefense / 4)) * level);\r\n    SpDefense = Math.floor(SpDefense / 100);\r\n    SpDefense = SpDefense + 5;\r\n    let multiplier = 1;\r\n    if (nature === \"calm\" || nature === \"gentle\" ||\r\n        nature === \"sassy\" || nature === \"careful\") {\r\n        multiplier = 1.1;\r\n    }\r\n    if (nature === \"naughty\" || nature === \"lax\" ||\r\n        nature === \"naive\" || nature === \"rash\") {\r\n        multiplier = .9;\r\n    }\r\n    SpDefense = Math.floor(SpDefense * multiplier);\r\n    return SpDefense;\r\n}\r\n\r\n setSpeed(baseSpeed, EVSpeed, IVSpeed, level, nature) {\r\n    let Speed = ((2 * baseSpeed + IVSpeed + Math.floor(EVSpeed / 4)) * level);\r\n    Speed = Math.floor(Speed / 100);\r\n    Speed = Speed + 5;\r\n    let multiplier = 1;\r\n    if (nature === \"timid\" || nature === \"hasty\" ||\r\n        nature === \"jolly\" || nature === \"naive\") {\r\n        multiplier = 1.1;\r\n    }\r\n    if (nature === \"brave\" || nature === \"relaxed\" ||\r\n        nature === \"quiet\" || nature === \"sassy\") {\r\n        multiplier = .9;\r\n    }\r\n    Speed = Math.floor(Speed * multiplier);\r\n    return Speed;\r\n}\r\n}\r\n\r\nexport default StatCalculator;","export default __webpack_public_path__ + \"static/media/pokedex_gen_1.a2f9083b.txt\";","export default __webpack_public_path__ + \"static/media/pokedex_gen_2.399c9232.txt\";","export default __webpack_public_path__ + \"static/media/pokedex_gen_3.d7f3a944.txt\";","export default __webpack_public_path__ + \"static/media/pokedex_gen_4.c5352ff6.txt\";","export default __webpack_public_path__ + \"static/media/pokedex_gen_5.835cf307.txt\";","export default __webpack_public_path__ + \"static/media/pokedex_gen_6.929b6ea1.txt\";","export default __webpack_public_path__ + \"static/media/pokedex_gen_7.fb9e4691.txt\";","export default __webpack_public_path__ + \"static/media/pokedex_gen_8.7d15b9e1.txt\";","export default __webpack_public_path__ + \"static/media/pokemoves_gen_1.00c9e28b.txt\";","export default __webpack_public_path__ + \"static/media/pokemoves_gen_2.a6391b38.txt\";","export default __webpack_public_path__ + \"static/media/pokemoves_gen_3.e327bde5.txt\";","export default __webpack_public_path__ + \"static/media/pokemoves_gen_4.76ccdae1.txt\";","export default __webpack_public_path__ + \"static/media/pokemoves_gen_5.150453b8.txt\";","export default __webpack_public_path__ + \"static/media/pokemoves_gen_6.b274beca.txt\";","export default __webpack_public_path__ + \"static/media/pokemoves_gen_7.77a52e5b.txt\";","export default __webpack_public_path__ + \"static/media/pokemoves_gen_8.30aca0d7.txt\";","import Gen1Moves from './pokemoves_gen_1.txt';\r\nimport Gen2Moves from './pokemoves_gen_2.txt';\r\nimport Gen3Moves from './pokemoves_gen_3.txt';\r\nimport Gen4Moves from './pokemoves_gen_4.txt';\r\nimport Gen5Moves from './pokemoves_gen_5.txt';\r\nimport Gen6Moves from './pokemoves_gen_6.txt';\r\nimport Gen7Moves from './pokemoves_gen_7.txt';\r\nimport Gen8Moves from './pokemoves_gen_8.txt';\r\n/*\r\n * Would be a good idea to make a constants file that contains the below variables, this would allow for these\r\n * Constants to be accessed in other files, if we find that is needed later on\r\n*/\r\nexport class moveCalculator {\r\n    constructor () {\r\n        this.moveCalculator = this.moveCalculator.bind(this);\r\n\r\n        this.gen1matchups = [[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.5, 0, 1],\r\n                     [1, 0.5, 0.5, 1, 2, 2, 1, 1, 1, 1, 1, 2, 0.5, 1, 0.5],\r\n                     [1, 2, 0.5, 1, 0.5, 1, 1, 1, 2, 1, 1, 1, 2, 1, 0.5],\r\n                     [1, 1, 2, 0.5, 0.5, 1, 1, 1, 0, 2, 1, 1, 1, 1, 0.5],\r\n                     [1, 0.5, 2, 1, 0.5, 1, 1, 0.5, 2, 0.5, 1, 0.5, 2, 1, 0.5],\r\n                     [1, 1, 0.5, 1, 2, 0.5, 1, 1, 2, 2, 1, 1, 1, 1, 2],\r\n                     [2, 1, 1, 1, 1, 2, 1, 0.5, 1, 0.5, 0.5, 0.5, 2, 0, 1],\r\n                     [1, 1, 1, 1, 2, 1, 1, 0.5, 0.5, 1, 1, 2, 0.5, 0.5, 1],\r\n                     [1, 2, 1, 2, 0.5, 1, 1, 2, 1, 0, 1, 0.5, 2, 1, 1],\r\n                     [1, 1, 1, 0.5, 2, 1, 2, 1, 1, 1, 1, 2, 0.5, 1, 1],\r\n                     [1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 0.5, 1, 1, 1, 1],\r\n                     [1, 0.5, 1, 1, 2, 1, 0.5, 2, 1, 0.5, 2, 1, 1, 0.5, 1],\r\n                     [1, 2, 1, 1, 1, 2, 0.5, 1, 0.5, 2, 1, 2, 1, 1, 1],\r\n                     [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1],\r\n                     [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2]];\r\n\r\n        this.gen2to5matchups = [[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.5, 0, 1, 1, 0.5],\r\n                        [1, 0.5, 0.5, 1, 2, 2, 1, 1, 1, 1, 1, 2, 0.5, 1, 0.5, 1, 2],\r\n                        [1, 2, 0.5, 1, 0.5, 1, 1, 1, 2, 1, 1, 1, 2, 1, 0.5, 1, 1],\r\n                        [1, 1, 2, 0.5, 0.5, 1, 1, 1, 0, 2, 1, 1, 1, 1, 0.5, 1, 1],\r\n                        [1, 0.5, 2, 1, 0.5, 1, 1, 0.5, 2, 0.5, 1, 0.5, 2, 1, 0.5, 1, 0.5],\r\n                        [1, 0.5, 0.5, 1, 2, 0.5, 1, 1, 2, 2, 1, 1, 1, 1, 2, 1, 0.5],\r\n                        [2, 1, 1, 1, 1, 2, 1, 0.5, 1, 0.5, 0.5, 0.5, 2, 0, 1, 2, 2],\r\n                        [1, 1, 1, 1, 2, 1, 1, 0.5, 0.5, 1, 1, 1, 0.5, 0.5, 1, 1, 0],\r\n                        [1, 2, 1, 2, 0.5, 1, 1, 2, 1, 0, 1, 0.5, 2, 1, 1, 1, 2],\r\n                        [1, 1, 1, 0.5, 2, 1, 2, 1, 1, 1, 1, 2, 0.5, 1, 1, 1, 0.5],\r\n                        [1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 0.5, 1, 1, 1, 1, 0, 0.5],\r\n                        [1, 0.5, 1, 1, 2, 1, 0.5, 0.5, 1, 0.5, 2, 1, 1, 0.5, 1, 2, 0.5],\r\n                        [1, 2, 1, 1, 1, 2, 0.5, 1, 0.5, 2, 1, 2, 1, 1, 1, 1, 0.5],\r\n                        [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 0.5, 0.5],\r\n                        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 0.5],\r\n                        [1, 1, 1, 1, 1, 1, 0.5, 1, 1, 1, 2, 1, 1, 2, 1, 0.5, 0.5],\r\n                        [1, 0.5, 0.5, 0.5, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 0.5]];\r\n\r\n        this.gen6to8matchups = [[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.5, 0, 1, 1, 0.5, 1],\r\n                        [1, 0.5, 0.5, 1, 2, 2, 1, 1, 1, 1, 1, 2, 0.5, 1, 0.5, 1, 2, 1],\r\n                        [1, 2, 0.5, 1, 0.5, 1, 1, 1, 2, 1, 1, 1, 2, 1, 0.5, 1, 1, 1],\r\n                        [1, 1, 2, 0.5, 0.5, 1, 1, 1, 0, 2, 1, 1, 1, 1, 0.5, 1, 1, 1],\r\n                        [1, 0.5, 2, 1, 0.5, 1, 1, 0.5, 2, 0.5, 1, 0.5, 2, 1, 0.5, 1, 0.5, 1],\r\n                        [1, 0.5, 0.5, 1, 2, 0.5, 1, 1, 2, 2, 1, 1, 1, 1, 2, 1, 0.5, 1],\r\n                        [2, 1, 1, 1, 1, 2, 1, 0.5, 1, 0.5, 0.5, 0.5, 2, 0, 1, 2, 2, 0.5],\r\n                        [1, 1, 1, 1, 2, 1, 1, 0.5, 0.5, 1, 1, 1, 0.5, 0.5, 1, 1, 0, 2],\r\n                        [1, 2, 1, 2, 0.5, 1, 1, 2, 1, 0, 1, 0.5, 2, 1, 1, 1, 2, 1],\r\n                        [1, 1, 1, 0.5, 2, 1, 2, 1, 1, 1, 1, 2, 0.5, 1, 1, 1, 0.5, 1],\r\n                        [1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 0.5, 1, 1, 1, 1, 0, 0.5, 1],\r\n                        [1, 0.5, 1, 1, 2, 1, 0.5, 0.5, 1, 0.5, 2, 1, 1, 0.5, 1, 2, 0.5, 0.5],\r\n                        [1, 2, 1, 1, 1, 2, 0.5, 1, 0.5, 2, 1, 2, 1, 1, 1, 1, 0.5, 1],\r\n                        [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 0.5, 1, 1],\r\n                        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 0.5, 0],\r\n                        [1, 1, 1, 1, 1, 1, 0.5, 1, 1, 1, 2, 1, 1, 2, 1, 0.5, 1, 0.5],\r\n                        [1, 0.5, 0.5, 0.5, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 0.5, 2],\r\n                        [1, 0.5, 1, 1, 1, 1, 2, 0.5, 1, 1, 1, 1, 1, 1, 2, 2, 0.5, 1]];\r\n\r\n        ////Currently set up so 1-9 are physical, 10+ are special ()\r\n        this.elemental_types = {\r\n            \"Normal\": 0,\r\n            \"Fire\": 1,\r\n            \"Water\": 2,\r\n            \"Electric\": 3,\r\n            \"Grass\": 4,\r\n            \"Ice\": 5,\r\n            \"Fighting\": 6,\r\n            \"Poison\": 7,\r\n            \"Ground\": 8,\r\n            \"Flying\": 9,\r\n            \"Psychic\": 10,\r\n            \"Bug\": 11,\r\n            \"Rock\": 12,\r\n            \"Ghost\": 13,\r\n            \"Dragon\": 14,\r\n            \"Dark\": 15,\r\n            \"Steel\": 16,\r\n            \"Fairy\": 17\r\n\t    };\r\n        \r\n        this.physical_types = [this.elemental_types.Normal, this.elemental_types.Fighting, \r\n            this.elemental_types.Flying, this.elemental_types.Poison, this.elemental_types.Ground, \r\n            this.elemental_types.Rock, this.elemental_types.Bug, this.elemental_types.Ghost, this.elemental_types.Steel];\r\n\r\n        this.special_types = [this.elemental_types.Fire, this.elemental_types.Water, \r\n            this.elemental_types.Grass, this.elemental_types.Electric, this.elemental_types.Psychic, \r\n            this.elemental_types.Ice, this.elemental_types.Dragon, this.elemental_types.Dark, this.elemental_types.Fairy];\r\n\r\n        this.weather_types = {\r\n\t\t\t\"Clear\": 1,\r\n            \"Harsh Sunlight\": 2,\r\n            \"Rain\": 3,\r\n            \"Sandstorm\": 4,\r\n            \"Hail\": 5,\r\n            \"Shadowy Aura\": 6,\r\n            \"Fog\": 7,\r\n            \"Strong Winds\": 8,\r\n\t\t\t\"Extremely Harsh Sunlight\": 9,\r\n\t\t\t\"Heavy Rain\": 10\r\n        };\r\n\r\n        this.move_category = {\r\n            Physical: 1,\r\n            Special: 2\r\n        };\r\n    }\r\n\r\n\r\n    readMovesFromFile(generation) {\r\n        let fileName;\r\n\r\n        switch(generation) {\r\n            case 1:\r\n              fileName = Gen1Moves\r\n              break;\r\n            case 2:\r\n                fileName = Gen2Moves\r\n                break;\r\n            case 3:\r\n                fileName = Gen3Moves\r\n                break;\r\n            case 4:\r\n                fileName = Gen4Moves\r\n                break;\r\n            case 5:\r\n                fileName = Gen5Moves\r\n                break;\r\n            case 6:\r\n                fileName = Gen6Moves\r\n                break;\r\n            case 7:\r\n                fileName = Gen7Moves\r\n                break;\r\n            case 8:\r\n                fileName = Gen8Moves\r\n                break;\r\n            default:\r\n                console.log(\"This generation doesn't exit\", generation);\r\n          }\r\n\r\n        return fetch(fileName).then(response => response.text()).then(text => this.moveParserHelper(text));\r\n    }\r\n\r\n    moveParserHelper(text) {\r\n        //let moves = [];\r\n        text = text+ \"\"\r\n        let movesList = text.split('\\n'); //if this breaks at some point, change split parameter\r\n\r\n        movesList.forEach(function(line, index, moves) { \r\n            let tempLine = line.split(\"\\t\");\r\n            moves[index] = {'Name': tempLine[0].toLowerCase().replace(\"-\",\" \"), 'type': tempLine[1], 'category': tempLine[2], 'power': tempLine[3]}; \r\n        });\r\n\r\n        return movesList\r\n    }\r\n\r\n    // getPokemonHelper(text, generation) {\r\n    //     let pokemonNames = [];\r\n    //     pokemonNames = text.split(\"\\n\"); //if this breaks at some point, change split parameter\r\n    //     //might need to remove below code when running on github\r\n    //     //TODO Known issue with form pokemon, such as Deoxys, Rotom, etc.\r\n    //     //Currently removing all regional forms and mega evolutions because we need to format them properly for PokeAPI\r\n    //     //TODO Another known issue with pokemon with spaces in their names, need to format them correctly for PokeAPI\r\n    //     let newPokemonList = [];\r\n    //     let tempID = 0;\r\n    //     for (let i = 1; i < pokemonNames.length - 1; i++) {\r\n    //         let tempList = pokemonNames[i].split(\"\\t\");\r\n    //         if (tempList[0] === tempID) {\r\n    //             continue;\r\n    //         } else {\r\n    //             tempID = tempList[0];\r\n    //             newPokemonList.push(tempList[1]);\r\n    //         }\r\n    //     }\r\n\r\n    //     let tempPkmnList = [];\r\n    //     tempPkmnList = this.state.pokemonList;\r\n    //     tempPkmnList[generation - 1] = newPokemonList;\r\n    //     this.setState({\r\n    //         pokemonList: tempPkmnList\r\n    //     });\r\n    //     this.forceUpdate();\r\n    //     return newPokemonList;\r\n    // }\r\n\r\n    \r\n\r\n    //TODO: Test out with array of numbers or something like that\r\n    async moveCalculator(AtkPokemon, DefPokemon, generation, stage_cond){\r\n        //Array of the damage of every move. Retains the same index as the passed in Moves object\r\n        let move_Damage = []\r\n        let allMoves = await this.readMovesFromFile(generation)\r\n        \r\n        AtkPokemon.moves.forEach(move => {            \r\n            for(let i=0;i<allMoves.length;i++){\r\n                if (allMoves[i].Name === move.move.name){\r\n                    let damage = this.calculateDamage(allMoves[i], AtkPokemon, DefPokemon, generation, stage_cond)\r\n                    move_Damage.push({move: allMoves[i].Name, move_type: allMoves[i].type, min_dmg: damage.min_damage, max_dmg: damage.max_damage})\r\n                }\r\n            }  \r\n        });\r\n\r\n        //Sort list of moves by max_dmg key in descending order\r\n        let optimalMoveList = move_Damage.sort((a,b) =>  b.max_dmg-a.max_dmg)\r\n        return optimalMoveList\r\n    }\r\n\r\n    //This function performs a poke round, rounds up if the decimal is > .5 and down otherwise\r\n    pokeRound(value) {\r\n        let leftover = value - Math.floor(value)\r\n        if (leftover > .5) {\r\n            value = Math.ceil(value)\r\n        } else {\r\n            value = Math.floor(value)\r\n        }\r\n        return value\r\n    }\r\n\r\n//This function calculates the damage for each move (stage_cond is an object we havent made yet)\r\n    calculateDamage(move, AtkPokemon, DefPokemon, generation, stage_cond){\r\n\r\n        // Modifier Variables (1 by default)\r\n        //let Targets_mod = 1;\r\n        let Weather_mod = 1;\r\n        //let Badge_mod = 1;\r\n        //let Critical_mod = 1;\r\n        //let Random_mod = 1;\r\n        let Stab_mod = 1;\r\n        let Type_mod = 1;\r\n        let Burn_mod = 1;\r\n        //let Move_mod = 1;\r\n        //let Ability_mod = 1;\r\n        //let Item_mod = 1;\r\n\r\n        let max_damage = 0;\r\n        let min_damage = 0;\r\n\r\n        if (move.category === 'none' || move.category === 'status') {\r\n            return {min_damage, max_damage};\r\n        }\r\n\r\n        //let typeIndex;\r\n        //add each type to this later\r\n        /*switch (move.type) {\r\n            case \"Fire\":\r\n                typeIndex = 1;\r\n                break;\r\n        }*/\r\n\r\n        //Ready to be tested\r\n        /*if (generation === 1){\r\n            let max_level = 2*AtkPokemon.level;\r\n            let min_level = AtkPokemon.level;\r\n\r\n            let power = move.power;\r\n\r\n            let max_rand_mod = 1;\r\n            let min_rand_mod = 217/255;\r\n\r\n            //Chooses correct a and d based on type of move\r\n            let a = 0;\r\n            let d = 0;\r\n            if (this.physical_types.indexOf(move.type) > -1) {\r\n                a = AtkPokemon.statTotals.Atk;\r\n                d = DefPokemon.statTotals.Def;\r\n            } else {\r\n                a = AtkPokemon.statTotals.SpAtk;\r\n                d = DefPokemon.statTotals.SpDef;\r\n            }\r\n\r\n            //Assumes type is an arrray\r\n            if(move.type.in(AtkPokemon.types)){\r\n                Stab_mod = 1.5;\r\n            }\r\n\r\n            //Skipped type for now\r\n            let max_modifier = Targets_mod*Weather_mod*Badge_mod*Critical_mod*Stab_mod*Type_mod*Burn_mod*Move_mod*Ability_mod*Item_mod;\r\n            let min_modifier = Targets_mod*Weather_mod*Badge_mod*Critical_mod*Stab_mod*Type_mod*Burn_mod*Move_mod*Ability_mod*Item_mod;\r\n            max_damage = (((2*max_level/5 + 2)*power*a/d)/50 + 2)*max_modifier;\r\n            min_damage = (((2*min_level/5 + 2)*power*a/d)/50 + 2)*min_modifier;\r\n        }*/\r\n\r\n        /*if (generation === 2){\r\n            let crit_level = 2*AtkPokemon.level\r\n            let min_level = AtkPokemon.level\r\n\r\n            let max_rand_mod = 1\r\n            let min_rand_mod = 217/255\r\n\r\n            //Chooses correct a and d based on type of move\r\n            let a = 0\r\n            let d = 0\r\n            \r\n            if (this.physical_types.indexOf(move.type) > -1) {\r\n                a = AtkPokemon.attack\r\n                d = DefPokemon.defense\r\n            } else {\r\n                a = AtkPokemon.special_attack\r\n                d = DefPokemon.special_defense\r\n            }\r\n\r\n            // Weather\r\n            if (stage_cond.weather === this.weather_types.Harsh_Sunlight && move.type === this.elemental_types.Fire){\r\n                Weather_mod = 1.5\r\n            }\r\n            if (stage_cond.weather === this.weather_types.Rain && move.type === this.elemental_types.Water){\r\n                Weather_mod = 1.5\r\n            }\r\n            if (stage_cond.weather === this.weather_types.Harsh_Sunlight && move.type === this.elemental_types.Water){\r\n                Weather_mod = 0.5\r\n            }\r\n            if (stage_cond.weather === this.weather_types.Rain && move.type === this.elemental_types.Fire){\r\n                Weather_mod = 0.5\r\n            }\r\n        }*/\r\n\r\n        if (generation === 3){\r\n            let level = AtkPokemon.level\r\n            let power = move.power\r\n            \r\n            //Chooses correct a and d based on type of move\r\n            let a = 0\r\n            let d = 0\r\n\r\n            let isPhysical\r\n\r\n            if (this.physical_types.indexOf(this.elemental_types[move.type]) > -1) {\r\n                a = AtkPokemon.totalStats.Atk;\r\n                d = DefPokemon.totalStats.Def;\r\n                isPhysical = true\r\n            } else {\r\n                a = AtkPokemon.totalStats.SpAtk;\r\n                d = DefPokemon.totalStats.SpDef;\r\n                isPhysical = false\r\n            }\r\n        \r\n            //Calculating Modifier Components\r\n            // Weather\r\n            if (stage_cond.weather === this.weather_types[\"Harsh Sunlight\"] && move.type === \"Fire\"){\r\n                Weather_mod = 1.5\r\n            }\r\n            if (stage_cond.weather === this.weather_types[\"Rain\"] && move.type === \"Water\"){\r\n                Weather_mod = 1.5\r\n            }\r\n            if (stage_cond.weather === this.weather_types[\"Harsh Sunlight\"] && move.type === \"Water\"){\r\n                Weather_mod = 0.5\r\n            }\r\n            if (stage_cond.weather === this.weather_types[\"Rain\"] && move.type === \"Fire\"){\r\n                Weather_mod = 0.5\r\n            }\r\n\r\n            //Randomness\r\n            //let max_rand_mod = 1\r\n            //let min_rand_mod = 0.85\r\n            //STAB\r\n            //console.log(\"move inside of moveCalculator\", move);\r\n            //console.log(\"AtkPokemon.type\", AtkPokemon.types);\r\n            /*if (move.type in AtkPokemon.types){ //fix this later\r\n                Stab_mod = 1.5\r\n            }*/\r\n            for (let i = 0; i < AtkPokemon.types.length; i++) {\r\n                if (move.type === AtkPokemon.types[i]) {\r\n                    Stab_mod = 1.5\r\n                    break;\r\n                }\r\n            }\r\n            //Type effects (fix later) (check if second type is actual a thing)\r\n            //This assumes move array has two vals, and second is null if pokemon only has one type\r\n            Type_mod = this.gen2to5matchups[this.elemental_types[move.type]][this.elemental_types[DefPokemon.types[0]]]\r\n            Type_mod *= DefPokemon.types[1] === undefined ? 1 : this.gen2to5matchups[this.elemental_types[move.type]][this.elemental_types[DefPokemon.types[1]]]\r\n\r\n            if (AtkPokemon.status === \"Burn\") {\r\n                Burn_mod = .5\r\n            }\r\n\r\n            let baseDamage = Math.floor(Math.floor((Math.floor(2 * level / 5 + 2) * power * a) / d) / 50)\r\n            if (isPhysical) {\r\n                baseDamage = Math.floor(baseDamage * Burn_mod)\r\n            }\r\n            baseDamage = Math.floor(baseDamage * Weather_mod)\r\n            baseDamage += 2\r\n            baseDamage = Math.floor(baseDamage * Stab_mod)\r\n            baseDamage = Math.floor(baseDamage * Type_mod)\r\n            min_damage = Math.floor(baseDamage * .85)\r\n            max_damage = baseDamage\r\n        }\r\n\r\n        if (generation === 4){\r\n\r\n            let level = AtkPokemon.level\r\n            let power = move.power\r\n\r\n            //let max_rand_mod = 1\r\n            //let min_rand_mod = 0.85\r\n\r\n            for (let i = 0; i < AtkPokemon.types.length; i++) {\r\n                if (move.type === AtkPokemon.types[i]) {\r\n                    Stab_mod = 1.5\r\n                    break;\r\n                }\r\n            }\r\n\r\n            Type_mod = this.gen2to5matchups[this.elemental_types[move.type]][this.elemental_types[DefPokemon.types[0]]]\r\n            Type_mod *= DefPokemon.types[1] === undefined ? 1 : this.gen2to5matchups[this.elemental_types[move.type]][this.elemental_types[DefPokemon.types[1]]]\r\n\r\n            let a = 0\r\n            let d = 0\r\n\r\n            let isPhysical\r\n\r\n            if (move.category === \"physical\") {\r\n                a = AtkPokemon.totalStats.Atk\r\n                d = DefPokemon.totalStats.Def\r\n                isPhysical = true\r\n            } else {\r\n                a = AtkPokemon.totalStats.SpAtk\r\n                d = DefPokemon.totalStats.SpDef\r\n                isPhysical = false\r\n            }\r\n            \r\n            // Weather\r\n            if (stage_cond.weather === this.weather_types[\"Harsh Sunlight\"] && move.type === \"Fire\"){\r\n                Weather_mod = 1.5\r\n            }\r\n            if (stage_cond.weather === this.weather_types[\"Rain\"] && move.type === \"Water\"){\r\n                Weather_mod = 1.5\r\n            }\r\n            if (stage_cond.weather === this.weather_types[\"Harsh Sunlight\"] && move.type === \"Water\"){\r\n                Weather_mod = 0.5\r\n            }\r\n            if (stage_cond.weather === this.weather_types[\"Rain\"] && move.type === \"Fire\"){\r\n                Weather_mod = 0.5\r\n            }\r\n\r\n            if (AtkPokemon.status === \"Burn\" && isPhysical) {\r\n                Burn_mod = .5\r\n            }\r\n\r\n            let Mod1 = Burn_mod * Weather_mod\r\n\r\n            let baseDamage = (Math.floor(Math.floor(Math.floor(Math.floor((Math.floor(level*2/5) + 2) * power * a) / 50) / d) * Mod1) + 2)\r\n            min_damage = Math.floor(baseDamage * .85)\r\n            max_damage = baseDamage\r\n            min_damage = Math.floor(min_damage * Stab_mod)\r\n            max_damage = Math.floor(max_damage * Stab_mod)\r\n            min_damage = Math.floor(min_damage * Type_mod)\r\n            max_damage = Math.floor(max_damage * Type_mod)\r\n        }\r\n\r\n        if (generation === 5){\r\n\r\n            let level = AtkPokemon.level\r\n            let power = move.power\r\n\r\n            for (let i = 0; i < AtkPokemon.types.length; i++) {\r\n                if (move.type === AtkPokemon.types[i]) {\r\n                    Stab_mod = 1.5\r\n                    break;\r\n                }\r\n            }\r\n\r\n            let a = 0\r\n            let d = 0\r\n\r\n            let isPhysical\r\n\r\n            if (move.category === \"physical\") {\r\n                a = AtkPokemon.totalStats.Atk\r\n                d = DefPokemon.totalStats.Def\r\n                isPhysical = true\r\n            } else {\r\n                a = AtkPokemon.totalStats.SpAtk\r\n                d = DefPokemon.totalStats.SpDef\r\n                isPhysical = false\r\n            }\r\n            Type_mod = this.gen2to5matchups[this.elemental_types[move.type]][this.elemental_types[DefPokemon.types[0]]]\r\n            Type_mod *= DefPokemon.types[1] === undefined ? 1 : this.gen2to5matchups[this.elemental_types[move.type]][this.elemental_types[DefPokemon.types[1]]]\r\n            \r\n            // Weather\r\n            if (stage_cond.weather === this.weather_types[\"Harsh Sunlight\"] && move.type === \"Fire\"){\r\n                Weather_mod = 1.5\r\n            }\r\n            if (stage_cond.weather === this.weather_types[\"Rain\"] && move.type === \"Water\"){\r\n                Weather_mod = 1.5\r\n            }\r\n            if (stage_cond.weather === this.weather_types[\"Harsh Sunlight\"] && move.type === \"Water\"){\r\n                Weather_mod = 0.5\r\n            }\r\n            if (stage_cond.weather === this.weather_types[\"Rain\"] && move.type === \"Fire\"){\r\n                Weather_mod = 0.5\r\n            }\r\n\r\n            if (AtkPokemon.status === \"Burn\" && isPhysical) {\r\n                Burn_mod = .5\r\n            }\r\n\r\n            let baseDamage = Math.floor(Math.floor(Math.floor(2*level/5 + 2)*power*a/d)/50) + 2\r\n            baseDamage *= Weather_mod\r\n            baseDamage = this.pokeRound(baseDamage)\r\n            min_damage = Math.floor(baseDamage * .85)\r\n            max_damage = baseDamage\r\n            min_damage *= Stab_mod\r\n            min_damage = this.pokeRound(min_damage)\r\n            max_damage *= Stab_mod\r\n            max_damage = this.pokeRound(max_damage)\r\n            min_damage *= Type_mod\r\n            min_damage = this.pokeRound(min_damage)\r\n            max_damage *= Type_mod\r\n            max_damage = this.pokeRound(max_damage)\r\n            min_damage *= Burn_mod\r\n            min_damage = this.pokeRound(min_damage)\r\n            max_damage *= Burn_mod\r\n            max_damage = this.pokeRound(max_damage)\r\n        }\r\n\r\n        if (generation === 6){\r\n\r\n            let level = AtkPokemon.level\r\n            let power = move.power\r\n\r\n            for (let i = 0; i < AtkPokemon.types.length; i++) {\r\n                if (move.type === AtkPokemon.types[i]) {\r\n                    Stab_mod = 1.5\r\n                    break;\r\n                }\r\n            }\r\n\r\n            let a = 0\r\n            let d = 0\r\n\r\n            let isPhysical\r\n\r\n            if (move.category === \"physical\") {\r\n                a = AtkPokemon.totalStats.Atk\r\n                d = DefPokemon.totalStats.Def\r\n                isPhysical = true\r\n            } else {\r\n                a = AtkPokemon.totalStats.SpAtk\r\n                d = DefPokemon.totalStats.SpDef\r\n                isPhysical = false\r\n            }\r\n            Type_mod = this.gen2to5matchups[this.elemental_types[move.type]][this.elemental_types[DefPokemon.types[0]]]\r\n            Type_mod *= DefPokemon.types[1] === undefined ? 1 : this.gen2to5matchups[this.elemental_types[move.type]][this.elemental_types[DefPokemon.types[1]]]\r\n            \r\n            // Weather\r\n            if ((stage_cond.weather === this.weather_types[\"Harsh Sunlight\"] && move.type === \"Fire\") ||\r\n                (stage_cond.weather === this.weather_types[\"Extremely Harsh Sunlight\"] && move.type === \"Fire\")){\r\n                Weather_mod = 1.5\r\n            }\r\n            if ((stage_cond.weather === this.weather_types[\"Rain\"] && move.type === \"Water\") ||\r\n                (stage_cond.weather === this.weather_types[\"Heavy Rain\"] && move.type === \"Water\")){\r\n                Weather_mod = 1.5\r\n            }\r\n            if ((stage_cond.weather === this.weather_types[\"Harsh Sunlight\"] && move.type === \"Water\") ||\r\n                (stage_cond.weather === this.weather_types[\"Extremely Harsh Sunlight\"] && move.type === \"Water\")){\r\n                Weather_mod = 0.5\r\n            }\r\n            if ((stage_cond.weather === this.weather_types[\"Rain\"] && move.type === \"Fire\") ||\r\n                (stage_cond.weather === this.weather_types[\"Heavy Rain\"] && move.type === \"Fire\")){\r\n                Weather_mod = 0.5\r\n            }\r\n\r\n            if (AtkPokemon.status === \"Burn\" && isPhysical) {\r\n                Burn_mod = .5\r\n            }\r\n\r\n            let baseDamage = Math.floor(Math.floor(Math.floor(2*level/5 + 2)*power*a/d)/50) + 2\r\n            baseDamage *= Weather_mod\r\n            baseDamage = this.pokeRound(baseDamage)\r\n            min_damage = Math.floor(baseDamage * .85)\r\n            max_damage = baseDamage\r\n            min_damage *= Stab_mod\r\n            min_damage = this.pokeRound(min_damage)\r\n            max_damage *= Stab_mod\r\n            max_damage = this.pokeRound(max_damage)\r\n            min_damage *= Type_mod\r\n            min_damage = this.pokeRound(min_damage)\r\n            max_damage *= Type_mod\r\n            max_damage = this.pokeRound(max_damage)\r\n            min_damage *= Burn_mod\r\n            min_damage = this.pokeRound(min_damage)\r\n            max_damage *= Burn_mod\r\n            max_damage = this.pokeRound(max_damage)\r\n        } \r\n\r\n        if (generation === 7){\r\n\r\n            let level = AtkPokemon.level\r\n            let power = move.power\r\n\r\n            if (stage_cond.terrain === 2 && move.type === \"Electric\") {\r\n                power *= 1.5\r\n                power = this.pokeRound(power)\r\n            } else if (stage_cond.terrain === 3 && move.type === \"Grass\") {\r\n                power *= 1.5\r\n                power = this.pokeRound(power)\r\n            } else if (stage_cond.terrain === 4 && move.type === \"Dragon\") {\r\n                power *= .5\r\n                power = this.pokeRound(power)\r\n            } else if (stage_cond.terrain === 5 && move.type === \"Psychic\") {\r\n                power *= 1.5\r\n                power = this.pokeRound(power)\r\n            }\r\n\r\n            for (let i = 0; i < AtkPokemon.types.length; i++) {\r\n                if (move.type === AtkPokemon.types[i]) {\r\n                    Stab_mod = 1.5\r\n                    break;\r\n                }\r\n            }\r\n\r\n            let a = 0\r\n            let d = 0\r\n\r\n            let isPhysical\r\n\r\n            if (move.category === \"physical\") {\r\n                a = AtkPokemon.totalStats.Atk\r\n                d = DefPokemon.totalStats.Def\r\n                isPhysical = true\r\n            } else {\r\n                a = AtkPokemon.totalStats.SpAtk\r\n                d = DefPokemon.totalStats.SpDef\r\n                isPhysical = false\r\n            }\r\n            Type_mod = this.gen2to5matchups[this.elemental_types[move.type]][this.elemental_types[DefPokemon.types[0]]]\r\n            Type_mod *= DefPokemon.types[1] === undefined ? 1 : this.gen2to5matchups[this.elemental_types[move.type]][this.elemental_types[DefPokemon.types[1]]]\r\n            \r\n            // Weather\r\n            if ((stage_cond.weather === this.weather_types[\"Harsh Sunlight\"] && move.type === \"Fire\") ||\r\n                (stage_cond.weather === this.weather_types[\"Extremely Harsh Sunlight\"] && move.type === \"Fire\")){\r\n                Weather_mod = 1.5\r\n            }\r\n            if ((stage_cond.weather === this.weather_types[\"Rain\"] && move.type === \"Water\") ||\r\n                (stage_cond.weather === this.weather_types[\"Heavy Rain\"] && move.type === \"Water\")){\r\n                Weather_mod = 1.5\r\n            }\r\n            if ((stage_cond.weather === this.weather_types[\"Harsh Sunlight\"] && move.type === \"Water\") ||\r\n                (stage_cond.weather === this.weather_types[\"Extremely Harsh Sunlight\"] && move.type === \"Water\")){\r\n                Weather_mod = 0.5\r\n            }\r\n            if ((stage_cond.weather === this.weather_types[\"Rain\"] && move.type === \"Fire\") ||\r\n                (stage_cond.weather === this.weather_types[\"Heavy Rain\"] && move.type === \"Fire\")){\r\n                Weather_mod = 0.5\r\n            }\r\n\r\n            if (AtkPokemon.status === \"Burn\" && isPhysical) {\r\n                Burn_mod = .5\r\n            }\r\n\r\n            let baseDamage = Math.floor(Math.floor(Math.floor(2*level/5 + 2)*power*a/d)/50) + 2\r\n            baseDamage *= Weather_mod\r\n            baseDamage = this.pokeRound(baseDamage)\r\n            min_damage = Math.floor(baseDamage * .85)\r\n            max_damage = baseDamage\r\n            min_damage *= Stab_mod\r\n            min_damage = this.pokeRound(min_damage)\r\n            max_damage *= Stab_mod\r\n            max_damage = this.pokeRound(max_damage)\r\n            min_damage *= Type_mod\r\n            min_damage = this.pokeRound(min_damage)\r\n            max_damage *= Type_mod\r\n            max_damage = this.pokeRound(max_damage)\r\n            min_damage *= Burn_mod\r\n            min_damage = this.pokeRound(min_damage)\r\n            max_damage *= Burn_mod\r\n            max_damage = this.pokeRound(max_damage)\r\n        } \r\n\r\n        /*if (generation === 8){\r\n\r\n            let max_rand_mod = 1\r\n            let min_rand_mod = 0.85\r\n\r\n            if (move.category <= this.move_category.Physical) {\r\n                let a = AtkPokemon.attack\r\n                let d = DefPokemon.defense\r\n            } else if (move.category <= this.move_category.Special) {\r\n                let a = AtkPokemon.special_attack\r\n                let d = DefPokemon.special_defense\r\n            }\r\n            \r\n            // Weather\r\n            if (stage_cond.weather === this.weather_types.Harsh_Sunlight && move.type === this.elemental_types.Fire){\r\n                Weather_mod = 1.5\r\n            }\r\n            if (stage_cond.weather === this.weather_types.Rain && move.type === this.elemental_types.Water){\r\n                Weather_mod = 1.5\r\n            }\r\n            if (stage_cond.weather === this.weather_types.Harsh_Sunlight && move.type === this.elemental_types.Water){\r\n                Weather_mod = 0.5\r\n            }\r\n            if (stage_cond.weather === this.weather_types.Rain && move.type === this.elemental_types.Fire){\r\n                Weather_mod = 0.5\r\n            }\r\n        }*/\r\n\r\n        return {min_damage, max_damage}\r\n    }\r\n}\r\n\r\nexport default moveCalculator;","import './App.css';\r\nimport {HashRouter as Router, Route, Switch} from \"react-router-dom\";\r\nimport HomePage from './HomePage.jsx';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n          <Switch>\r\n            <Route exact path = \"/\" component = {HomePage}/>\r\n          </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}